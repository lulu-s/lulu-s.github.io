[
	{
		"title": "CSS-SECRETS 读书笔记 - 1",
		"date": "2020-09-05 12:36:38",
		"tag": [
			"CSS"
		],
		"content": "<h1 id=\"css-secrets\">CSS-SECRETS</h1>\n<h3 id=\"工具\">工具</h3>\n<ul>\n<li>LaTeX</li>\n<li>Atlas(书籍排版): <a href=\"http://atlas.oreilly.com\">http://atlas.oreilly.com</a></li>\n<li>Espresso(文本编辑器): <a href=\"https://espressoapp.com/\">https://espressoapp.com/</a></li>\n<li>Dabblet(在线演示): <a href=\"http://dabblet.com/\">http://dabblet.com/</a></li>\n</ul>\n<h4 id=\"兼容\">兼容</h4>\n<ul>\n<li><p>Can I Use...? (<a href=\"http://caniuse.com\">http://caniuse.com</a>)</p>\n</li>\n<li><p>WebPlatform.org (<a href=\"http://webplatform.org\">http://webplatform.org</a>)</p>\n</li>\n<li><p>Mozilla Developer Network (<a href=\"http://developer.mozilla.org\">http://developer.mozilla.org</a>)</p>\n</li>\n<li><p>维基百科上的 “ 浏览器排版引擎对比 ”</p>\n</li>\n<li><p>Modernizr (<a href=\"http://modernizr.com\">http://modernizr.com</a>)</p>\n</li>\n</ul>\n<h3 id=\"链接\">链接</h3>\n<ul>\n<li>作者博客: <a href=\"http://lea.verou.me\">http://lea.verou.me</a></li>\n</ul>\n",
		"filename": "CSS-SECRETS.md",
		"uuid": "e88013a8-bd86-41ce-bad1-1fee876dbe86"
	},
	{
		"title": "Arduino",
		"date": "2020-06-18 12:36:38",
		"tag": [
			"Arduino"
		],
		"content": "<h1 id=\"arduino\">Arduino</h1>\n<br>\n\n<h2 id=\"结合web，控制led。\">结合web，控制led。</h2>\n<p>参考： <a href=\"https://blog.csdn.net/TonyIOT/article/details/103194166\">https://blog.csdn.net/TonyIOT/article/details/103194166</a> <br></p>\n<h3 id=\"1-硬件\">1. 硬件</h3>\n<ul>\n<li>Arduino UNO板</li>\n<li>发光二极管</li>\n<li>电阻</li>\n</ul>\n<h3 id=\"2-软件\">2. 软件</h3>\n<blockquote>\n<p>Arduino IDE：用于将程序上传到Arduino UNO板。<br><br>Firmata：它是一种协议，用于与计算机，智能手机等设备上的软件与不同的微控制器进行通信。Firmata固件可以加载在任何微控制器板上（例如Arduino，Teensy），并且可以与任何笔记本电脑，PC或智能手机进行通讯。Firmata库随Arduino IDE一起提供，因此无需从任何地方下载。<br><br>Johnny-Five API: <a href=\"http://johnny-five.io/api/led/#api\">http://johnny-five.io/api/led/#api</a></p>\n</blockquote>\n<h3 id=\"3-建立xx文件夹，-下载库\">3. 建立xx文件夹， 下载库</h3>\n<pre><code>    npm i johnny-five express socket.io serialport</code></pre>\n<ul>\n<li>serialport 串口封装库。</li>\n<li>express HTTP服务封装库。</li>\n<li>socket.io WebSockets库。</li>\n<li>Johnny-Five Johnny-Five是基于JavaScript的机器人技术和物联网平台，用于以JavaScript编写代码，并用于在Arduino开发板和计算机之间架起桥梁。Johnny-Five已通过各种Arduino兼容板（例如Arduino UNO，NANO，Promini等）进行了测试。在本教程中，必须下载Johnny-Five库才能使用其所有功能。</li>\n</ul>\n<h3 id=\"4-将firmata固件加载到arduino-uno中\">4. 将Firmata固件加载到Arduino UNO中</h3>\n<ul>\n<li>使用USB线连接 Arduino UNO</li>\n<li>打开 Arduino IDE，然后从工具中选择Arduino UNO板（如果使用其他板，则选择相应的一块）</li>\n<li>选择已连接的Arduino UNO的相应COM端口</li>\n<li>点击菜单-&gt;文件-&gt;示例-&gt;固件-&gt; StandardFirmata找到固件</li>\n<li>通过转到文件-&gt;上传，上传「StandardFirmata」。</li>\n</ul>\n<h3 id=\"5-编写blinkledjs程序，控制led闪烁\">5. 编写blinkled.js程序，控制led闪烁</h3>\n<pre><code class=\"language-javascript\">    var johnny_five = require(&quot;johnny-five&quot;);\n\n    var led_pin = 5; // 引脚5\n    var arduino_board = new johnny_five.Board();\n\n    arduino_board.on(&quot;ready&quot;, function(){\n        console.log(&quot;led has stared blinking&quot;);\n        var led = new johnny_five.Led(led_pin); // 设置输出模式\n        led.blink(100);  // 延迟100ms\n    })</code></pre>\n<p>执行终端输入 <code> node blink_led.js</code></p>\n",
		"filename": "arduino.md",
		"uuid": "f0d35c83-01eb-44b3-9309-9d9ec2c6879a"
	},
	{
		"title": "终端命令指南",
		"date": "2020-06-18 12:36:38",
		"tag": [
			"Shell",
			"DOS"
		],
		"content": "<h1 id=\"终端命令指南\">终端命令指南</h1>\n<ul>\n<li><a href=\"#DOS-%E5%91%BD%E4%BB%A4%E8%A1%8C\">DOS 命令</a></li>\n<li><a href=\"#Mac-%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4\">Mac 终端命令</a></li>\n<li><a href=\"#liunx-%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4\">liunx 命令</a></li>\n</ul>\n<h2 id=\"dos-命令\">DOS 命令</h2>\n<ol>\n<li>cd 进入指定目录<pre><code> 语法：cd dirname     // 进入指定目录\n      cd             // 回到根目录\n      cd ..          // 回到上一层目录。</code></pre>\n</li>\n<li>ls 查看当前目录下的所有文件(直接使用)</li>\n</ol>\n<h2 id=\"mac-终端命令\">Mac 终端命令</h2>\n<h3 id=\"目录操作\">目录操作</h3>\n<ol>\n<li>cd 进入指定目录<pre><code> 语法：cd dirname     // 进入指定目录\n      cd             // 回到根目录\n      cd ..          // 回到上一层目录。</code></pre>\n</li>\n<li>ls 查看当前目录下的所有文件(直接使用)</li>\n<li>pwd 显示当前路径名(直接使用)</li>\n<li>mkdir 创建目录<pre><code> mkdir dirname</code></pre>\n</li>\n<li>rmdir 删除目录<pre><code> rmdir dirname</code></pre>\n</li>\n</ol>\n<h3 id=\"文件\">文件</h3>\n<ol>\n<li>open 打开文件<pre><code> open filename</code></pre>\n</li>\n<li>file 显示文件类型<pre><code> file filename</code></pre>\n</li>\n<li>cp 复制文件或目录<pre><code> cp -r name newname  // 复制name，复制体名newname</code></pre>\n</li>\n<li>rm 删除文件或目录<pre><code> rm -r name</code></pre>\n</li>\n</ol>\n<h3 id=\"进程\">进程</h3>\n<ol>\n<li>ps 显示进程当前状态(直接使用)</li>\n<li>kill 终止进程<pre><code> kill -9 30142</code></pre>\n</li>\n</ol>\n<h3 id=\"安全\">安全</h3>\n<ol>\n<li>passwd 修改用户密码</li>\n</ol>\n<h3 id=\"时间直接使用\">时间(直接使用)</h3>\n<ol>\n<li>date 显示系统的当前日期和时间</li>\n<li>cal 显示日历</li>\n</ol>\n<h3 id=\"网络\">网络</h3>\n<ol>\n<li>ping 给一个网络主机发送 回应请求<pre><code> ping ip</code></pre>\n</li>\n</ol>\n<h3 id=\"其他命令直接使用\">其他命令(直接使用)</h3>\n<ol>\n<li>clear 清空窗口</li>\n<li>env 当前设置过的环境变量</li>\n<li>who 列出当前登录的所有用户</li>\n<li>whoami 显示当前正进行操作的用户名</li>\n<li>tty 显示终端或伪终端的名称</li>\n<li>du 查询磁盘使用情况</li>\n<li>df 显示文件系统的总空间和可用空间</li>\n<li>w 显示当前系统活动的总信息</li>\n</ol>\n<h2 id=\"liunx-命令\">liunx 命令</h2>\n<ol>\n<li>nano 文件名 （创建文本）</li>\n<li>curl 文件路径 &gt; 文件名 （从该路径下载并创建名为“文件名“的文件）</li>\n<li>cat 文件名 （查看文件）</li>\n<li>rm 文件名 （删除文件）</li>\n</ol>\n",
		"filename": "command.md",
		"uuid": "d3b9c699-5aa4-4b3b-8b7a-0bbd977b3360"
	},
	{
		"title": "Markdown 语法",
		"date": "2020-10-08 12:36:38",
		"tag": [
			"CSS",
			"HTML",
			"Node",
			"Three.js"
		],
		"content": "<h1 id=\"markdown语法\">Markdown语法</h1>\n<ul>\n<li><a href=\"#%E9%94%9A%E9%93%BE%E6%8E%A5\">锚链接</a></li>\n<li><a href=\"#%E6%A0%87%E9%A2%98\">标题</a></li>\n<li><a href=\"#%E5%88%97%E8%A1%A8\">列表</a><ul>\n<li><a href=\"#%E6%9C%89%E5%BA%8F%E5%88%97%E8%A1%A8\">有序列表</a></li>\n<li><a href=\"#%E6%97%A0%E5%BA%8F%E5%88%97%E8%A1%A8\">无序列表</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%8C%BA%E5%9D%97%E5%BC%95%E7%94%A8\">区块引用</a></li>\n<li><a href=\"#%E5%88%86%E5%89%B2%E7%BA%BF\">分割线</a></li>\n<li><a href=\"#%E9%93%BE%E6%8E%A5\">链接</a><ul>\n<li><a href=\"#%E8%A1%8C%E5%86%85%E5%BC%8F%E9%93%BE%E6%8E%A5\">行内式链接</a></li>\n<li><a href=\"#%E5%8F%82%E6%95%B0%E5%BC%8F%E9%93%BE%E6%8E%A5\">参数式链接</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%9B%BE%E7%89%87\">图片</a><ul>\n<li><a href=\"#%E8%A1%8C%E5%86%85%E5%BC%8F%E5%9B%BE%E7%89%87\">行内式图片</a></li>\n<li><a href=\"#%E5%8F%82%E6%95%B0%E5%BC%8F%E5%9B%BE%E7%89%87\">参数式图片</a></li>\n</ul>\n</li>\n<li><a href=\"#%E4%BB%A3%E7%A0%81%E5%9D%97\">代码块</a></li>\n<li><a href=\"#%E8%BD%AC%E4%B9%89\">转义</a></li>\n<li><a href=\"#%E5%BC%BA%E8%B0%83\">强调</a></li>\n<li><a href=\"#%E8%A1%A8%E6%A0%BC\">表格</a></li>\n<li><a href=\"#%E9%AB%98%E4%BA%AE\">高亮</a></li>\n<li><a href=\"#%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F\">数学公式</a></li>\n</ul>\n<p>注意：如果不希望前后文串行或者合并，使用换行解决。</p>\n<h2 id=\"锚链接\">锚链接</h2>\n<p>标题自带锚链接，使用[标题](#标题)接收锚链接点击后的位置。<br>\n当标题中有空格的时候，使用-代替。<br>\n当多级符号存在2.3时候，需要去掉.转换为23。</p>\n<h2 id=\"标题\">标题</h2>\n<p>第一种标题格式，在标题前加入1~6个任意的#等同于h1~h6，空格分隔。 </p>\n<blockquote>\n<h1 id=\"一级标题\">一级标题</h1>\n<h2 id=\"二级标题\">二级标题</h2>\n<h3 id=\"三级标题\">三级标题</h3>\n<h4 id=\"四级标题\">四级标题</h4>\n<h5 id=\"五级标题\">五级标题</h5>\n<h6 id=\"六级标题\">六级标题</h6>\n</blockquote>\n<p>第二种标题格式，只有h1~h2，( = )表示一级，( - )表示二级，在标题下一行插入=即为一级标题，=可插入1~n个。 </p>\n<blockquote>\n<h1 id=\"一级标题-1\">一级标题</h1>\n<h2 id=\"二级标题-1\">二级标题</h2>\n</blockquote>\n<p> 第三种标题格式，在标题前后分别加入1~6个任意的#等同于h1~h6，空格分隔。</p>\n<blockquote>\n<h1 id=\"一级标题-2\">一级标题</h1>\n<h2 id=\"二级标题-2\">二级标题</h2>\n<h3 id=\"三级标题-1\">三级标题</h3>\n<h4 id=\"四级标题-1\">四级标题</h4>\n<h5 id=\"五级标题-1\">五级标题</h5>\n<h6 id=\"六级标题-1\">六级标题</h6>\n</blockquote>\n<p> 原理：将符号转换为HTML标签(h1~h6)。<br>\n 吐槽：此种方法过于累赘，第二种又却只少腿，还是第一种最便捷。</p>\n<h2 id=\"列表\">列表</h2>\n<h3 id=\"有序列表\">有序列表</h3>\n<p>只能使用数字。</p>\n<blockquote>\n<ol>\n<li>hello，我是*</li>\n<li>hi，我是*</li>\n<li>hello，我是+</li>\n</ol>\n</blockquote>\n<p>但有序列表的顺序是根据第一行的设定数来的，当顺序为323的时候，会按照3依次向下顺序排列。</p>\n<blockquote>\n<ol start=\"3\">\n<li>hello，我是*</li>\n<li>hi，我是*</li>\n<li>hello，我是+</li>\n</ol>\n</blockquote>\n<h3 id=\"无序列表\">无序列表</h3>\n<p>可以使用+、-、*，来创建无需列表，单一的符号就是连续的列表，使用不同的符号会分段。</p>\n<blockquote>\n<ul>\n<li>hello，我是*</li>\n<li>hi，我是*</li>\n</ul>\n<ul>\n<li>hello，我是+</li>\n<li>hi，我是+</li>\n</ul>\n<ul>\n<li>hello，我是-</li>\n<li>hi，我是-</li>\n</ul>\n</blockquote>\n<p>原理：将符号转换为HTML标签(ul&gt;li)。</p>\n<h2 id=\"区块引用\">区块引用</h2>\n<p>在语句前加一个&gt;，空格分隔。</p>\n<blockquote>\n<p>hello </p>\n</blockquote>\n<p>多层嵌套，看来可以无限嵌套。</p>\n<blockquote>\n<p>hello</p>\n<blockquote>\n<p>hello</p>\n<blockquote>\n<p>hello</p>\n<blockquote>\n<p>hello</p>\n<blockquote>\n<p>hello</p>\n<blockquote>\n<p>hello</p>\n<blockquote>\n<p>hello</p>\n<blockquote>\n<p>hello</p>\n<blockquote>\n<p>hello</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<p> 注意：在区块中，如中间有注释信息什么的不在引用内，要换行切换或加br标签。</p>\n<h2 id=\"分割线\">分割线</h2>\n<p>可以使用*、-、_，至少三个以上的符号，中间可存在空格，不能有其他符号。</p>\n<hr>\n<hr>\n<hr>\n<hr>\n<p>注意：减号和文字合体是标题，所以要换行才能生成分割线。</p>\n<h2 id=\"链接\">链接</h2>\n<h3 id=\"行内式链接\">行内式链接</h3>\n<p>使用[链接内容](链接地址)，实现页面内的跳转。<br></p>\n<p><a href=\"https://www.baidu.com\">百度</a></p>\n<p>仅能增加提示信息，使用[链接内容](链接地址) &quot;提示信息&quot;。</p>\n<p><a href=\"https://www.baidu.com\" title=\"百度\">百度</a></p>\n<h3 id=\"参数式链接\">参数式链接</h3>\n<p>就是将链接定义为参数，可以直接使用参数名，这样的好处是，当多次使用同一个链接的时候，可以省略字符。<br>\n定义参数：<br>\n    * [lulu]: <a href=\"https://github.com/lulu-s\">https://github.com/lulu-s</a> &quot;Github&quot; <br>\n    * [lulu]: &lt;<a href=\"https://github.com/lulu-s&gt;\">https://github.com/lulu-s&gt;</a> &quot;Github&quot; <br>\n使用方式：使用的时候，需要带上方括号[lulu]。</p>\n<p><a href=\"https://github.com/lulu-s\" title=\"Github\">lulu</a></p>\n<h2 id=\"图片\">图片</h2>\n<p>图片和链接的使用方法一样，唯一区别在于要在开头加一个!，如果不加!就会变成链接。</p>\n<h3 id=\"行内式图片\">行内式图片</h3>\n<p><img src=\"https://github.com/lulu-s/lulu-book/blob/master/assets/%E5%A4%B4%E5%83%8F.jpg\" alt=\"头像\" title=\"百度\"></p>\n<h3 id=\"参数式图片\">参数式图片</h3>\n<p><img src=\"https://github.com/lulu-s/lulu-book/blob/master/assets/%E5%A4%B4%E5%83%8F.jpg\" alt=\"头像\" title=\"Github\"></p>\n<h2 id=\"代码块\">代码块</h2>\n<p>第一种，单行用`xxx`，类似Es6的对象扩展运算符</p>\n<p><code>&lt;div&gt;hello&lt;/div&gt;</code></p>\n<p>第二种，多行用```xxx```前后包裹起来。</p>\n<pre><code>    &lt;ul&gt;\n        &lt;li&gt;hello&lt;/li&gt;\n        &lt;li&gt;hi&lt;/li&gt;\n    &lt;/ul&gt;</code></pre>\n<h2 id=\"删除线\">删除线</h2>\n<p>使用~删除我~前后包裹。</p>\n<p><del>删除我</del></p>\n<h2 id=\"转义\">转义</h2>\n<p>只需要在符号前加\\，多个需要转义的连在一起，在开头写一个\\就行了。</p>\n<p>~</p>\n<p>[title]</p>\n<h2 id=\"强调\">强调</h2>\n<p>单独的*、_为倾斜，需要前后包裹闭合，双写为加粗。</p>\n<p>倾斜：*加粗我* <em>加粗我</em></p>\n<pre><code> \\_加粗我_ _加粗我_  </code></pre>\n<p>加粗：*<em>加粗我*</em> <strong>加粗我</strong></p>\n<pre><code> \\__加粗我__ __加粗我__  </code></pre>\n<h2 id=\"表格\">表格</h2>\n<table>\n<thead>\n<tr>\n<th>玩具</th>\n<th>价格</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>球类</td>\n<td>50</td>\n</tr>\n</tbody></table>\n<p>玩具  |  价格\n|-------|-------|\n球类  |  50</p>\n<p>玩具  |  价格\n|:------:|:-----:|\n球类  |  50</p>\n<h2 id=\"高亮\">高亮</h2>\n<p>Hello <code>lulu</code>,Thanks you.</p>\n<h2 id=\"数学公式\">数学公式</h2>\n<p>汇总日期待定 <br>\n参考： <a href=\"https://www.jianshu.com/p/e74eb43960a1\">https://www.jianshu.com/p/e74eb43960a1</a></p>\n",
		"filename": "markdown grammar.md",
		"uuid": "17c4061c-c2d2-462d-9560-bb108b183682"
	},
	{
		"title": "树莓派调试jauns",
		"date": "2020-05-18 17:54:29",
		"tag": [
			"树莓派",
			"jauns"
		],
		"content": "<h2 id=\"树莓派调试jauns\">树莓派调试jauns</h2>\n<h3 id=\"安装阶段\">安装阶段</h3>\n<h4 id=\"1-连接树莓派\">1. 连接树莓派</h4>\n<pre><code>$ ssh pi@192.168.1.149\n$ pi@192.168.1.149&#39;s password: 密码</code></pre>\n<h4 id=\"2-更新-apt-get\">2. 更新 apt-get</h4>\n<pre><code>$ sudo apt-get update -y &amp;&amp; sudo apt-get upgrade -y</code></pre>\n<h4 id=\"3-安装-gstreamer，版本不对就找最新版安装。\">3. 安装 gstreamer，版本不对就找最新版安装。</h4>\n<h4 id=\"4-安装jauns\">4. 安装jauns</h4>\n<pre><code>$ git clone https://github.com/meetecho/janus-gateway.git\n$ cd janus-gateway\n$ sh autogen.sh\n$ ./configure --disable-websockets --disable-data-channels --disable-rabbitmq --disable-docs --prefix=/opt/janus\n$ make\n$ sudo make install\n$ sudo nano janus.plugin.streaming.cfg\n\n[gst-rpwc]\ntype = rtp\nid = 1\ndescription = RPWC H264 test streaming\naudio = yes\naudioport = 8005\naudiopt = 10\naudiortpmap = opus/48000/2\nvideo = yes\nvideoport = 8004\nvideopt = 96\nvideortpmap = H264/90000\nvideofmtp = profile-level-id=42e028\\;packetization-mode=1</code></pre>\n<h4 id=\"5-发送视频流\">5. 发送视频流</h4>\n<pre><code>$ gst-launch-1.0 rpicamsrc brightness=85 contrast=40 awb-mode=6 exposure-mode=0 ! video/x-raw,width=640,height=480 ! x264enc speed-preset=ultrafast tune=zerolatency byte-stream=true bitrate=200 threads=1 ! h264parse config-interval=1 ! rtph264pay ! udpsink host=127.0.0.1 port=8004 sync=false\n\n$ gst-launch-1.0 rpicamsrc ! video/x-raw,width=640,height=480 ! x264enc speed-preset=ultrafast tune=zerolatency byte-stream=true bitrate=200 threads=1 ! h264parse config-interval=1 ! rtph264pay ! udpsink host=ip port=8004\n\n$ raspivid --verbose --nopreview -hf -vf --width 640 --height 480 --framerate 30 --profile baseline --timeout 0 -o - | gst-launch-1.0 -v fdsrc ! h264parse ! rtph264pay config-interval=1 pt=96 ! udpsink host=ip port=8004\n\n$ raspivid --verbose --nopreview -hf -vf --width 640 --height 480 --framerate 15 --bitrate 1000000 --profile baseline --timeout 0 -o - | gst-launch-1.0 -v fdsrc ! h264parse ! rtph264pay config-interval=1 pt=96 ! udpsink host=ip port=8004</code></pre>\n<h4 id=\"6-启动\">6. 启动</h4>\n<pre><code>$ cd janus-gateway\n$ ./janus -F /opt/janus/etc/janus/ -d 7\n$  pi@raspberrypi:/opt/janus/share/janus/demos $ sudo http-server -p 80</code></pre>\n<h3 id=\"dns-配置\">dns 配置</h3>\n<h4 id=\"1-安装dns-proxy\">1. 安装dns-proxy</h4>\n<pre><code>$ npm i dns-proxy -g</code></pre>\n<h4 id=\"2-配置-dns-新建-congifjson-文件，终端输入nano-configjson，将下面的代码粘贴进去，修改域名配对关系即可。\">2. 配置 dns, 新建 congif.json 文件，终端输入<code>nano config.json</code>，将下面的代码粘贴进去，修改域名配对关系即可。</h4>\n<pre><code>{\n    &quot;port&quot;: 53,\n    // （电脑ip）手机端 wifi dns 要修改的和这个一样 \n    &quot;host&quot;: &quot;192.168.1.x&quot;,\n    &quot;logging&quot;: &quot;dns-proxy:query&quot;,\n    &quot;nameservers&quot;: [\n        &quot;8.8.8.8&quot;,\n        &quot;8.8.4.4&quot;\n    ],\n    &quot;servers&quot;: {},\n    &quot;domains&quot;: {\n        // 域名配对关系\n        &quot;hello.test.com&quot;: &quot;192.168.1.x&quot;\n    },\n    &quot;hosts&quot;: {\n        &quot;hihi.com&quot;: &quot;127.0.0.1&quot;\n    }\n}</code></pre>\n<h4 id=\"3-启动，记得调试完将dns修改回来\">3. 启动，记得调试完将dns修改回来</h4>\n<pre><code>sudo dns-proxy --config=config.json --debug</code></pre>\n<h3 id=\"https-配置\">https 配置</h3>\n<blockquote>\n<p>注意： 域名必须一致，否则会被认定为是失效的。</p>\n</blockquote>\n<h4 id=\"1-创建根证书\">1. 创建根证书</h4>\n<pre><code>$ openssl genrsa -des3 -out rootCA.key 2048\n$ openssl req -x509 -new -nodes -key rootCA.key -sha256 -days 1024 -out rootCA.pem</code></pre>\n<p>输入的信息，仅供参考</p>\n<blockquote>\n<p>Country Name (2 letter code) []:CN <br>\nState or Province Name (full name) []:Province <br>\nLocality Name (eg, city) []:City <br>\nOrganization Name (eg, company) []:WIZ Technology Co. Ltd. <br>\nOrganizational Unit Name (eg, section) []:WIZ Technology Co. Ltd. <br>\nCommon Name (eg, fully qualified host name) []:WIZ Technology Root CA <br></p>\n</blockquote>\n<h4 id=\"2-信任根证书\">2. 信任根证书</h4>\n<p>打开【钥匙串访问】，左侧【钥匙串】选择【系统】，【种类】选择【证书】，然后把刚才生成的根证书导入进来（根证书是rootCA.pem），双击此证书，在【信任】设置中，SSL和X.509基本策略两项选择【始终信任】。</p>\n<h4 id=\"3-ios端下载根证书\">3. ios端下载根证书</h4>\n<p>第一步，通过 http-server 将根证书在手机端下载安装，在【通用】选择【描述文件】，信任你的根证书。\n第二步，【通用】选择【关于本机】，滑动到页面底端，选择【证书信任设置】，勾选你的证书。</p>\n<h4 id=\"4-域ssl证书\">4. 域SSL证书</h4>\n<h5 id=\"1-创建-servercsrcnf-文件，-将文本粘贴进去，修改-cn-为自己的域名，emailaddress-为邮箱\">1. 创建 server.csr.cnf 文件， 将文本粘贴进去，修改 CN 为自己的域名，emailAddress 为邮箱</h5>\n<pre><code>$ sudo nano server.csr.cnf\n\n[req]\ndefault_bits = 2048\nprompt = no\ndefault_md = sha256\ndistinguished_name = dn\n\n[dn]\nC=US\nST=RandomState\nL=RandomCity\nO=RandomOrganization\nOU=RandomOrganizationUnit\nemailAddress=hello@example.com\nCN = localhost</code></pre>\n<h5 id=\"2-创建一个v3ext文件，修改-dns1-为自己的域名\">2. 创建一个v3.ext文件，修改 DNS.1 为自己的域名</h5>\n<pre><code>authorityKeyIdentifier=keyid,issuer\nbasicConstraints=CA:FALSE\nkeyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment\nsubjectAltName = @alt_names\n\n[alt_names]\nDNS.1 = localhost</code></pre>\n<h5 id=\"3-创建证书密钥以localhost使用存储在其中的配置设置servercsrcnf。该密钥存储在serverkey。-\">3. 创建证书密钥以localhost使用存储在其中的配置设置server.csr.cnf。该密钥存储在server.key。 <br></h5>\n<pre><code> 证书签名请求通过我们之前创建的根SSL证书颁发，创建出一个localhost的域名证书。输出是一个名为的证书文件server.crt。</code></pre>\n<pre><code>$ openssl req -new -sha256 -nodes -out server.csr -newkey rsa：2048 -keyout server.key -config &lt;（cat server.csr.cnf）\n$ openssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days 500 -sha256 -extfile v3.ext</code></pre>\n<h4 id=\"5-信任域证书\">5. 信任域证书</h4>\n<p>重复第2步，下载域证书，并在描述文件内信任它。</p>\n<h3 id=\"nginx-配置\">nginx 配置</h3>\n<blockquote>\n<p>根据参考中的 &quot;jauns配置nginx&quot; 进行配置 </p>\n</blockquote>\n<h4 id=\"1-命令-停止--开启--重启\">1. 命令 (停止 | 开启 | 重启)</h4>\n<pre><code>$ sudo /etc/init.d/nginx stop \n$ sudo /etc/init.d/nginx start\n$ sudo /etc/init.d/nginx reload \n$ sudo nginx -V</code></pre>\n<h3 id=\"参考\">参考</h3>\n<ul>\n<li>安装 jauns(new)：<a href=\"https://www.rs-online.com/designspark/building-a-raspberry-pi-2-webrtc-camera\">https://www.rs-online.com/designspark/building-a-raspberry-pi-2-webrtc-camera</a></li>\n<li>安装 jauns：<a href=\"https://planb.nicecupoftea.org/2015/10/17/hackspace-hat-quick-install-or-audio-and-video-streaming-from-a-raspberry-pi-to-a-remote-or-local-webrtc-compatible-browser/\">https://planb.nicecupoftea.org/2015/10/17/hackspace-hat-quick-install-or-audio-and-video-streaming-from-a-raspberry-pi-to-a-remote-or-local-webrtc-compatible-browser/</a></li>\n<li>jauns配置nginx：<a href=\"https://blog.csdn.net/cgs1999/article/details/89881733\">https://blog.csdn.net/cgs1999/article/details/89881733</a></li>\n<li>dns拦截: <a href=\"https://www.npmjs.com/package/dns-proxy\">https://www.npmjs.com/package/dns-proxy</a></li>\n<li>https证书： <ul>\n<li><a href=\"https://juejin.im/post/5a6db896518825732d7fd8e0\">https://juejin.im/post/5a6db896518825732d7fd8e0</a></li>\n<li><a href=\"https://lamjack.github.io/2018/05/17/openssl-localhost-https/?nsukey=l4wVj8Of0bJiT%2Bu2A5iFrbNSRb5ElM7s3dm0Trij%2FfZ7XaTG86gvXJ6mRpNezhul0bRK9meBs8VuvqPxkUGB3VciSSSPpXIGlzb46rGQ%2FFewuXrP80HdoCWcNwzYk3WStmw46CWFqZMY0%2BgfLUji%2F%2BGqC3J%2FJ5X31EC8gJSepb8P%2FLbSeyQgWzQLkMGmxbktr8yBlV%2BrzMFsoF8sz%2F2GUw%3D%3D\">https://lamjack.github.io/2018/05/17/openssl-localhost-https/?nsukey=l4wVj8Of0bJiT%2Bu2A5iFrbNSRb5ElM7s3dm0Trij%2FfZ7XaTG86gvXJ6mRpNezhul0bRK9meBs8VuvqPxkUGB3VciSSSPpXIGlzb46rGQ%2FFewuXrP80HdoCWcNwzYk3WStmw46CWFqZMY0%2BgfLUji%2F%2BGqC3J%2FJ5X31EC8gJSepb8P%2FLbSeyQgWzQLkMGmxbktr8yBlV%2BrzMFsoF8sz%2F2GUw%3D%3D</a></li>\n</ul>\n</li>\n</ul>\n",
		"filename": "pi.md",
		"uuid": "0a18b8de-4852-4c2b-9a58-32d43f97b0df"
	},
	{
		"title": "ʚ碎片知识 / 小问题ɞ",
		"date": "2020-4-7 12:36:38",
		"tag": [
			"CSS",
			"HTML",
			"Node",
			"Three.js"
		],
		"content": "<h1 id=\"ʚ碎片知识--小问题ɞ\">ʚ碎片知识 / 小问题ɞ</h1>\n<ul>\n<li><a href=\"#%E7%A2%8E%E7%89%87%E9%97%AE%E9%A2%98\">碎片问题 (js / css / html / three / vue)</a><ul>\n<li><a href=\"#1-%E8%A7%A3%E5%86%B3%E4%BD%BF%E7%94%A8-css3-%E7%9A%84-rotate%E5%87%BA%E7%8E%B0%E9%94%AF%E9%BD%BF%E5%8C%96%E7%9A%84%E9%97%AE%E9%A2%98\">1. 解决使用 css3 的 rotate ，出现锯齿化的问题</a></li>\n<li><a href=\"#2-%E8%A7%A3%E5%86%B3-threejs-%E7%BC%A9%E6%94%BE%E6%97%B6%E4%BB%A5%E6%95%B4%E4%B8%AA%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%BA%E5%8D%95%E4%BD%8D\">2. 解决 Three.js 缩放时以整个浏览器为单位</a></li>\n<li><a href=\"#3-threejs-%E7%94%B1-3d-%E5%9C%BA%E6%99%AF%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2%E6%88%90-2d-%E5%B1%8F%E5%B9%95%E5%9D%90%E6%A0%87\">3. Three.js 由 3d 场景坐标转换成 2d 屏幕坐标</a></li>\n<li><a href=\"#4-div-%E5%81%9A%E7%9A%84-button-%E7%82%B9%E5%87%BB%E5%87%BA%E7%8E%B0%E9%80%89%E4%B8%AD%E8%93%9D%E6%A1%86\">4. div 做的 button 点击出现选中蓝框</a></li>\n<li><a href=\"#5-%E5%8E%BB%E6%8E%89-span-%E6%A0%87%E7%AD%BE%E7%9A%84%E9%97%B4%E8%B7%9D\">5. 去掉 span 标签的间距</a></li>\n<li><a href=\"#6-js-%E5%AF%B9%E8%B1%A1%E5%8E%BB%E9%87%8D\">6. js 对象去重</a></li>\n<li><a href=\"#7-js-%E4%BF%9D%E7%95%99%E4%B8%A4%E4%BD%8D%E5%B0%8F%E6%95%B0\">7. js 保留两位小数</a></li>\n<li><a href=\"#8-%E4%BF%AE%E6%94%B9-placeholder-%E9%BB%98%E8%AE%A4%E9%A2%9C%E8%89%B2\">8. 修改 placeholder 默认颜色</a></li>\n<li><a href=\"#9-radio-%E5%8F%96%E6%B6%88%E9%80%89%E4%B8%AD%E5%B9%B6%E8%83%BD%E5%86%8D%E6%AC%A1%E9%80%89%E4%B8%AD\">9. radio 取消选中并能再次选中</a></li>\n<li><a href=\"#10-%E7%94%9F%E6%88%90-uuid\">10. 生成 uuid</a></li>\n<li><a href=\"#11-%E6%A0%A1%E9%AA%8C%E6%89%8B%E6%9C%BA%E5%8F%B7\">11. 校验手机号</a></li>\n<li><a href=\"#12-%E4%BF%AE%E6%94%B9-threejs-%E8%83%8C%E6%99%AF%E8%89%B2\">12. 修改 Three.js 背景色</a></li>\n<li><a href=\"#13-%E8%A7%A3%E5%86%B3%E5%90%8C%E6%97%B6%E7%BB%91%E5%AE%9A%E5%8D%95%E5%87%BB%E5%92%8C%E5%8F%8C%E5%87%BB%E4%BA%8B%E4%BB%B6-%E4%BC%9A%E4%B8%A4%E4%B8%AA%E9%83%BD%E6%89%A7%E8%A1%8C%E7%9A%84%E6%83%85%E5%86%B5\">13. 解决同时绑定单击和双击事件，会两个都执行的情况</a></li>\n<li><a href=\"#14-%E8%AF%84%E7%BA%A7%E7%BB%84%E4%BB%B6\">14. 评级组件</a></li>\n<li><a href=\"#15-%E4%BF%9D%E5%AD%98-json\">15. 保存 json</a></li>\n<li><a href=\"#16-flex-%E5%83%8F%E8%A1%A8%E6%A0%BC%E4%B8%80%E6%A0%B7%E5%B8%83%E5%B1%80\">16. flex 像表格一样布局</a></li>\n<li><a href=\"#17-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%BD%8D%E7%BD%AE%E6%9F%A5%E8%AF%A2\">17. 二维数组位置查询</a></li>\n<li><a href=\"#18-Vue-%E6%9B%B4%E6%94%B9%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E4%B8%8D%E5%88%B7%E6%96%B0%E9%A1%B5%E9%9D%A2\">18. Vue 更改对象属性不刷新页面</a></li>\n<li><a href=\"#19-%E8%A7%A3%E5%86%B3-canvas-%E7%BB%98%E5%88%B6%E5%9C%A8%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%A8%A1%E7%B3%8A%E7%9A%84%E9%97%AE%E9%A2%98\">19. 解决 canvas 绘制在移动端模糊的问题</a></li>\n<li><a href=\"#20-css-%E4%B8%AD%E8%8E%B7%E5%8F%96-class-%E7%9A%84%E7%AC%AC-n-%E4%B8%AA%E5%85%83%E7%B4%A0\">20. css 中获取 class 的第 n 个元素</a></li>\n<li><a href=\"#21-css-%E5%8A%A8%E7%94%BB%E5%9C%A8%E7%BB%93%E6%9D%9F%E5%90%8E%E4%BF%9D%E6%8C%81%E8%AF%A5%E7%8A%B6%E6%80%81%E4%B8%8D%E5%8F%98\">21. css 动画在结束后保持该状态不变</a></li>\n<li><a href=\"#22-%E8%8E%B7%E5%8F%96-class-%E5%86%85%E7%9A%84%E6%A0%B7%E5%BC%8F%E5%85%83%E7%B4%A0\">22. 获取 class 内的样式元素</a></li>\n<li><a href=\"#23-%E5%AE%9E%E7%8E%B0-blob-%E4%B8%8E-base64-%E4%BA%92%E8%BD%AC\">23. 实现 blob 与 base64 互转</a></li>\n<li><a href=\"#24-js-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%8F%90%E5%8F%96%E6%B1%89%E5%AD%97%E5%92%8C%E5%8E%BB%E6%8E%89%E6%B1%89%E5%AD%97\">24. js 正则表达式提取汉字和去掉汉字</a></li>\n<li><a href=\"#25-js-%E5%AE%9E%E7%8E%B0-canvas-%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87%E5%B9%B6%E4%B8%8B%E8%BD%BD%E5%88%B0%E6%9C%AC%E5%9C%B0\">25. js 实现 canvas 保存图片并下载到本地</a></li>\n<li><a href=\"#26-js-%E5%AE%9E%E7%8E%B0%E6%96%87%E6%9C%AC%E7%9A%84%E8%AF%AD%E9%9F%B3%E6%9C%97%E8%AF%BB\">26. js 实现文本的语音朗读</a></li>\n<li><a href=\"#27-%E6%A0%A1%E9%AA%8C%E6%98%AF%E5%90%A6%E4%B8%BA%E4%B8%AD%E6%96%87\">27. 校验是否为中文</a></li>\n<li><a href=\"#28-%E9%BC%A0%E6%A0%87--%E6%89%8B%E6%8C%87%E4%BD%8D%E7%BD%AE%E8%BD%AC%E6%8D%A2-canvas-%E5%9D%90%E6%A0%87\">28. 鼠标 / 手指位置转换 canvas 坐标</a></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p><a href=\"#Node\">Node</a>  </p>\n<ul>\n<li><a href=\"#1-express-%E6%8E%A5%E6%94%B6-post-%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0\">1. express 接收 post 请求参数</a></li>\n<li><a href=\"#2-%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98\">2. 跨域问题</a></li>\n</ul>\n</li>\n<li><p><a href=\"#bug\">bug</a></p>\n<ul>\n<li><a href=\"#1-uncaught-syntaxerror-invalid-or-unexpected-token-javascript\">1. Uncaught SyntaxError: Invalid or unexpected token (javascript)</a></li>\n<li><a href=\"#2-unable-to-access-httpsgithubcom-openssl-ssl_connect-ssl_error_syscall-in-connection-to-githubcom443-github\">2. unable to access &#39;https://github.com/&#39;: OpenSSL SSL_connect: SSL_ERROR_SYSCALL in connection to github.com:443. (Github)</a></li>\n<li><a href=\"#3-Update-the-Pi-%E5%87%BA%E9%94%99\">3. Update the Pi 出错</a></li>\n<li><a href=\"#4-vue-router-%E5%AF%BC%E8%87%B4%E6%8A%A5%E9%94%99-vue-warn-failed-to-mount-component-template-or-render-function-not-defined\">4. vue-router 导致报错 [Vue warn]: Failed to mount component: template or render function not defined.</a></li>\n<li><a href=\"#5-uncaught-typeerror-abtargetclassnameindexof-is-not-a-function\">5. Uncaught TypeError: a[b].target.className.indexOf is not a function</a></li>\n<li><a href=\"#6-payloadtoolargeerror-request-entity-too-larg\">6. PayloadTooLargeError: request entity too larg</a></li>\n<li><a href=\"#7-could-not-resolve-host-githubcom\">7. Could not resolve host: github.com</a></li>\n<li><a href=\"#8-ping-baiducom-%E4%B8%8D%E9%80%9A\">8. ping baidu.com 不通</a></li>\n<li><a href=\"#9-npm-i-%E5%8D%A1%E4%BD%8F\">9. npm i 卡住</a></li>\n</ul>\n</li>\n<li><p><a href=\"#mac\">Mac</a></p>\n<ul>\n<li><a href=\"#1-git-%E5%AE%89%E8%A3%85\">1. git 安装</a></li>\n<li><a href=\"#2-npm-%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98\">2. npm 权限问题</a></li>\n<li><a href=\"#3-%E6%9F%A5%E7%9C%8B-ip\">3. 查看 ip</a></li>\n<li><a href=\"#4-%E5%85%B3%E9%97%AD%E6%AD%BB%E4%B8%8D%E6%8E%89%E7%9A%84%E8%BF%9B%E7%A8%8B\">4. 关闭死不掉的进程</a></li>\n<li><a href=\"#5-%E8%A7%A3%E5%8E%8Brar\">5. 解压 rar</a></li>\n<li><a href=\"#6-ffmpeg\">6. ffmpeg</a></li>\n<li><a href=\"#7-Xcode-xxx-xip-%E4%B8%8D%E6%98%AF%E6%9D%A5%E8%87%AA-apple\">7. Xcode_xxx.xip 不是来自 apple</a></li>\n<li><a href=\"#8-mac-%E8%A7%A3%E5%8E%8B-rar-%E6%96%87%E4%BB%B6%E5%87%BA%E7%8E%B0%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81\">8. mac 解压 .rar 文件出现中文乱码</a></li>\n</ul>\n</li>\n<li><p><a href=\"#github\">Github</a></p>\n<ul>\n<li><a href=\"#1-%E5%85%B3%E4%BA%8E-gitmodule-%E5%AD%90%E6%A8%A1%E5%9D%97%E7%9A%84%E8%BF%90%E7%94%A8\">1. 关于 gitmodule 子模块的运用</a></li>\n</ul>\n</li>\n<li><p><a href=\"#%E6%89%8B%E6%9C%BA%E7%AB%AF\">手机端</a></p>\n<ul>\n<li><a href=\"#1-%E5%85%BC%E5%AE%B9%E6%89%80%E6%9C%89%E6%9C%BA%E5%9E%8B\">1. 兼容所有机型</a></li>\n<li><a href=\"#2-%E7%A6%81%E6%AD%A2%E8%8B%B9%E6%9E%9C%E6%89%8B%E6%9C%BA%E7%BC%A9%E6%94%BEios10%E5%90%8E%E7%9A%84%E7%89%88%E6%9C%AC\">2. 禁止苹果手机缩放，ios10 后的版本</a></li>\n<li><a href=\"#3-%E5%88%A4%E6%96%AD%E6%A8%AA%E7%AB%96%E5%B1%8F\">3. 判断横竖屏</a></li>\n<li><a href=\"#4-ios%E9%94%AE%E7%9B%98%E5%BC%B9%E8%B5%B7-body%E6%8B%89%E9%95%BF-%E5%85%B3%E9%97%AD%E9%94%AE%E7%9B%98%E9%A1%B5%E9%9D%A2%E4%B8%8D%E5%9B%9E%E5%BC%B9\">4. ios 键盘弹起，body 拉长，关闭键盘页面不回弹</a></li>\n<li><a href=\"#5-%E4%BF%AE%E6%94%B9%E8%8B%B9%E6%9E%9C%E9%BB%98%E8%AE%A4%E7%9A%84%E5%B7%A5%E5%85%B7%E6%A0%8F%E5%92%8C%E8%8F%9C%E5%8D%95%E6%A0%8F\">5. 修改苹果默认的工具栏和菜单栏</a></li>\n<li><a href=\"#6-%E9%98%BB%E6%AD%A2%E4%B8%8B%E6%8B%89%E6%BB%91%E5%8A%A8%E7%9A%84%E6%95%88%E6%9E%9C%E6%A9%A1%E7%9A%AE%E7%AD%8B%E6%95%88%E6%9E%9C\">6. 阻止下拉滑动的效果（橡皮筋效果）</a></li>\n<li><a href=\"#7-%E8%BD%AF%E9%94%AE%E7%9B%98%E5%BC%B9%E8%B5%B7\">7. 软键盘弹起</a></li>\n</ul>\n</li>\n<li><p><a href=\"#%E5%B8%B8%E8%AF%86%E6%80%A7%E7%9F%A5%E8%AF%86%E7%82%B9\">常识性知识点</a></p>\n<ul>\n<li><a href=\"#1-%E5%BD%B1%E5%AD%90dom\">1. 影子 DOM</a></li>\n<li><a href=\"#2-%E6%9F%A5%E7%9C%8B-http-%E8%AF%B7%E6%B1%82%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E8%B7%A8%E5%9F%9F\">2. 查看 http 请求是否可以跨域</a></li>\n<li><a href=\"#3-%E6%96%87%E5%AD%97%E7%AB%96%E6%8E%92%E7%9A%84%E6%96%B9%E5%BC%8F\">3. 文字竖排的方式</a></li>\n<li><a href=\"#4-Data-URL-%E6%A0%BC%E5%BC%8F\">4. Data URL 格式</a></li>\n<li><a href=\"#5-%E6%9F%A5%E7%9C%8B-threejs-%E7%89%88%E6%9C%AC\">5. 查看 Three.js 版本</a></li>\n</ul>\n</li>\n<li><p><a href=\"#%E6%95%B0%E5%AD%A6%E7%B1%BB\">数学类</a></p>\n<ul>\n<li><a href=\"#1-%E7%B2%92%E5%AD%90%E7%94%BB%E7%90%83\">1. 粒子画球</a></li>\n<li><a href=\"#2-%E8%AE%A1%E7%AE%97%E5%9C%86%E6%9F%B1%E8%B4%B4%E5%9B%BE%E6%AF%94%E4%BE%8B\">2. 计算圆柱贴图比例</a></li>\n<li><a href=\"#3-%E8%AE%A1%E7%AE%97%E5%9B%BE%E5%83%8F%E7%BC%A9%E6%94%BE%E6%AF%94%E4%BE%8B\">3. 计算图像缩放比例</a></li>\n<li><a href=\"#4-%E5%88%86%E9%A1%B5\">4. 分页</a></li>\n<li><a href=\"#5-canvas-arc-%E7%BB%98%E5%88%B6%E5%9C%86%E8%A7%92%E7%9F%A9%E5%BD%A2\">5. canvas arc 绘制圆角矩形</a></li>\n</ul>\n</li>\n<li><p><a href=\"#%E5%B0%8F%E7%A8%8B%E5%BA%8F\">小程序</a></p>\n<ul>\n<li><a href=\"#1-%E6%8D%A2%E8%A1%8C%E6%A0%87%E7%AD%BE%E5%BF%85%E9%A1%BB%E6%98%AF-text-\">1. 换行（标签必须是 <code>&lt;text&gt;</code> ?）</a></li>\n<li><a href=\"#2-%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%9B%B4%E6%96%B0%E5%90%8E%E4%B8%8D%E8%83%BD%E8%87%AA%E5%8A%A8%E5%BC%B9%E5%87%BA%E6%8E%88%E6%9D%83%E9%9C%80%E8%A6%81%E7%94%A8%E6%88%B7%E6%89%8B%E5%8A%A8%E7%82%B9%E5%87%BB%E5%AE%98%E6%96%B9%E6%8E%A8%E8%8D%90-button-\">2. 小程序更新后，不能自动弹出授权，需要用户手动点击(官方推荐 button )</a></li>\n<li><a href=\"#3-bindtap-%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6%E4%BC%A0%E5%8F%82\">3. bindtap 点击事件传参</a></li>\n<li><a href=\"#4-%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3--%E5%BF%AB%E9%80%9F%E6%9F%A5%E6%89%BE\">4. 微信开发文档 / 快速查找</a></li>\n<li><a href=\"#5-%E7%BB%84%E4%BB%B6%E5%8C%96\">5. 组件化</a></li>\n<li><a href=\"#6-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\">6. 生命周期</a></li>\n<li><a href=\"#7-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%AF%BC%E8%88%AA%E6%A0%8F\">7. 自定义导航栏</a></li>\n<li><a href=\"#8-text-%E6%98%BE%E7%A4%BA%E7%A9%BA%E6%A0%BC\">8. text 显示空格</a></li>\n<li><a href=\"#9-web-view-%E7%9A%84%E4%BD%BF%E7%94%A8\">9. web-view 的使用</a></li>\n<li><a href=\"#10-%E7%88%B6%E8%B0%83%E7%94%A8%E5%AD%90%E7%BB%84%E4%BB%B6-%E5%8F%82%E6%95%B0%E5%8F%98%E5%8C%96%E4%B8%8D%E5%88%B7%E6%96%B0%E7%9A%84%E9%97%AE%E9%A2%98\">10. 父调用子组件，参数变化不刷新的问题</a></li>\n</ul>\n</li>\n<li><p><a href=\"#linux\">linux</a></p>\n<ul>\n<li><a href=\"#1-raspberry-pi-(%E6%A0%91%E8%8E%93%E6%B4%BE)-%E6%B8%85%E5%8D%8E%E6%BA%90\">1. raspberry pi (树莓派) 清华源</a></li>\n<li><a href=\"#2-nodejs-%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%AC%E4%B8%8B%E8%BD%BD-(Debian)\">2. nodejs 最新版本下载 (Debian)</a></li>\n</ul>\n</li>\n<li><p><a href=\"#WScript\">WScript</a></p>\n<ul>\n<li><a href=\"#1-VB%E8%84%9A%E6%9C%AC\">1. VB脚本</a></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><a href=\"#Electron\">Electron</a><ul>\n<li><a href=\"#1-%E7%AA%97%E5%8F%A3%E5%85%A8%E5%B1%8F%E9%80%80%E5%87%BA%E5%BF%AB%E6%8D%B7%E9%94%AE\">1. 窗口全屏退出快捷键</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"碎片问题\">碎片问题</h2>\n<h3 id=\"1-解决使用-css3-的-rotate，出现锯齿化的问题。\">1. 解决使用 css3 的 rotate，出现锯齿化的问题。</h3>\n<pre><code class=\"language-css\">  -webkit-backface-visibility: hidden;</code></pre>\n<p>参考：<a href=\"https://code.i-harness.com/zh-TW/q/630f7b\">https://code.i-harness.com/zh-TW/q/630f7b</a></p>\n<h3 id=\"2-解决-threejs-缩放时以整个浏览器为单位。\">2. 解决 Three.js 缩放时以整个浏览器为单位。</h3>\n<pre><code class=\"language-css\">  body {\n      overflow: hidden;\n  }\n  canvas {\n      display: block; /* fix necessary to remove space at bottom of canvas */\n  }</code></pre>\n<p>参考：<a href=\"https://stackoverflow.com/questions/10425310/three-js-full-screen-issue\">https://stackoverflow.com/questions/10425310/three-js-full-screen-issue</a></p>\n<h3 id=\"3-threejs-由-3d-场景坐标转换成-2d-屏幕坐标\">3. Three.js 由 3d 场景坐标转换成 2d 屏幕坐标</h3>\n<pre><code class=\"language-javascript\">  // 首先需要通过某个场景组Group里面的模型的位置坐标，不输入具体坐标则为该组内位置坐标全部转换 group.localToWorld()\n  var pos = group.localToWorld( new three.Vector3(x, y, z) );\n\n  // 然后通过THREE.Vector3的project方法，逆转相机来求出二维坐标，或全部 pos.project( camera );\n  var vector = new three.Vector3( pos.x, pos.y, pos.z ).project( camera );\n\n  // 返回的是一个二维向量，我们可以通过获取的坐标计算出当前点距离显示平面左上角的像素距离。\n  vector.x = ( vector.x + 1) * w / 2;\n  vector.y = - ( vector.y - 1) * h / 2;</code></pre>\n<p>参考：<br></p>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_30100043/article/details/80798791\">https://blog.csdn.net/qq_30100043/article/details/80798791</a></li>\n<li><a href=\"https://codeday.me/bug/20190328/844841.html\">https://codeday.me/bug/20190328/844841.html</a></li>\n</ul>\n<h3 id=\"4-div-做的-button-点击出现选中蓝框\">4. div 做的 button 点击出现选中蓝框</h3>\n<p>div或者button的样式里面加上</p>\n<pre><code class=\"language-css\">    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);</code></pre>\n<p>参考：<a href=\"https://www.iteye.com/blog/yigang-2235539\">https://www.iteye.com/blog/yigang-2235539</a></p>\n<h3 id=\"5-去掉-span-标签的间距\">5. 去掉 span 标签的间距</h3>\n<p>将span转成块级标签，父元素字体大小设置为0，再设置span字体大小</p>\n<pre><code class=\"language-css\">    .show_msg {\n        font-size: 0px;\n    }\n\n    .show_msg &gt; span {\n        display: inline-block;\n        font-size: 40px;\n    }</code></pre>\n<p>参考：<a href=\"https://blog.csdn.net/u014627807/article/details/79961951\">https://blog.csdn.net/u014627807/article/details/79961951</a></p>\n<h3 id=\"6-js-对象去重\">6. js 对象去重</h3>\n<pre><code class=\"language-javascript\">    var obj = [\n            {year: &#39;2013-2014&#39;, term: &#39;1&#39;},\n            {year: &#39;2013-2014&#39;, term: &#39;2&#39;},\n            {year: &#39;2013-2014&#39;, term: &#39;3&#39;},\n            {year: &#39;2013-2014&#39;, term: &#39;2&#39;},\n            {year: &#39;2014-2015&#39;, term: &#39;1&#39;},\n            {year: &#39;2013-2014&#39;, term: &#39;2&#39;}\n            ]\n    var unique = {};\n    obj.forEach(function(gpa) {\n        unique[JSON.stringify(gpa)] = gpa\n    });\n    obj = Object.keys(unique).map(function(u) {\n        return JSON.parse(u)\n    });\n    console.log(unique)</code></pre>\n<p>参考：<a href=\"https://blog.csdn.net/longzhoufeng/article/details/78224205\">https://blog.csdn.net/longzhoufeng/article/details/78224205</a></p>\n<h3 id=\"7-js-保留两位小数\">7. js 保留两位小数</h3>\n<p>以下处理结果会四舍五入:</p>\n<pre><code class=\"language-javascript\">    var num = 2.446242342;\n    num = num.toFixed(2);  // \b输出结果为 2.45</code></pre>\n<p>以下处理结果不会四舍五入:</p>\n<pre><code class=\"language-javascript\">    第一种，先把小数变整数：\n    Math.floor(15.7784514000 * 100) / 100   // \b输出结果为 15.77\n\n    第二种，\b当作字符串，使用正则匹配：\n    Number(15.7784514000.toString().match(/^\\d+(?:\\.\\d{0,2})?/))   // \b输出结果为 15.77,不能用于整数如 10 必须写为10.0000</code></pre>\n<p>参考：<a href=\"https://www.runoob.com/w3cnote/javascript-two-decimal.html\">https://www.runoob.com/w3cnote/javascript-two-decimal.html</a></p>\n<h3 id=\"8-修改-placeholder-默认颜色\">8. 修改 placeholder 默认颜色</h3>\n<pre><code class=\"language-css\">    :-moz-placeholder { \n        :-moz-placeholder { /* Mozilla Firefox 4 to 18 */\n        color: #fff;  \n    }\n\n    ::-moz-placeholder { /* Mozilla Firefox 19+ */\n        color: #fff;\n    }\n\n    input:-ms-input-placeholder,\n    textarea:-ms-input-placeholder {\n        color: #fff;\n    }\n\n    input::-webkit-input-placeholder,\n    textarea::-webkit-input-placeholder {\n        color: #fff;\n    }\n</code></pre>\n<p>参考：<a href=\"http://www.bbs0101.com/archives/116.html\">http://www.bbs0101.com/archives/116.html</a></p>\n<h3 id=\"9-radio-取消选中并能再次选中\">9. radio 取消选中并能再次选中</h3>\n<pre><code class=\"language-javascript\">    var old = null; //用来保存原来的对象\n\n    ao.loop(()=&gt;{\n        if(this.$refs.radio.checked){\n            old = this.$refs.radio; //如果当前对象选中，保存该对象\n        } else {\n            old = null;\n        }\n    })\n\n    this.$refs.radio.addEventListener(&quot;click&quot;, (e) =&gt; {\n        if(this.$refs.radio == old){//如果点击的对象原来是选中的，取消选中\n            this.$refs.radio.checked = false;\n            old = null;\n            console.log(old);\n        } else{\n            old = this.$refs.radio;\n            console.log(old);\n        }\n    })</code></pre>\n<p>参考：<a href=\"https://blog.csdn.net/tutian2000/article/details/80256757\">https://blog.csdn.net/tutian2000/article/details/80256757</a></p>\n<h3 id=\"10-生成-uuid\">10. 生成 uuid</h3>\n<pre><code class=\"language-javascript\">    export function guid() {\n        return &#39;xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx&#39;.replace(/[xy]/g, function(c) {\n            var r = Math.random()*16|0, v = c == &#39;x&#39; ? r : (r&amp;0x3|0x8);\n            return v.toString(16);\n        });\n    }\n\n    //_nanoid \n    /**\n     * Minified by jsDelivr using UglifyJS v3.1.10.\n     * Original file: /npm/nano-id@1.1.0/index.js\n     * \n     * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n    */\n    var alphanumeric = &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;,\n        nanoId = function (n) {\n            null == n &amp;&amp; (n = 10);\n            for (var a = &quot;&quot;, r = 0; r &lt; n; ++r) a += alphanumeric[Math.floor(Math.random() * alphanumeric.length)];\n            return a\n        };\n    nanoId.verify = function (n) {\n        return &quot;string&quot; == typeof n &amp;&amp; /^[a-zA-Z0-9]+$/.test(n)\n    };</code></pre>\n<p>参考：<a href=\"https://www.jianshu.com/p/04ee4396edc3\">https://www.jianshu.com/p/04ee4396edc3</a></p>\n<h3 id=\"11-校验手机号\">11. 校验手机号</h3>\n<pre><code class=\"language-javascript\">    export function isPoneAvailable(tel) {\n        var myreg=/^[1][3,4,5,7,8][0-9]{9}$/;\n        if (!myreg.test(tel)) {\n            return false;\n        } else {\n            return true;\n        }\n    }</code></pre>\n<h3 id=\"12-修改-threejs-背景色\">12. 修改 Three.js 背景色</h3>\n<pre><code class=\"language-javascript\">    renderer.setClearColor(&#39;rgb(135,206,250)&#39;,1.0);\n    renderer.setClearColor(0xffffff,1.0);\n    renderer.setClearColor(&#39;#428bca&#39;,1.0);\n    renderer.setClearColor(&#39;rgba(135,206,250,0.5)&#39;,1.0);</code></pre>\n<p>参考： <a href=\"https://blog.csdn.net/cc_fys/article/details/72649916\">https://blog.csdn.net/cc_fys/article/details/72649916</a></p>\n<h3 id=\"13-解决同时绑定单击和双击事件，会两个都执行的情况\">13. 解决同时绑定单击和双击事件，会两个都执行的情况</h3>\n<pre><code class=\"language-javascript\">    //单击延时触发\n    var clickTimeId;\n\n    /*\n    * 页面初始化\n    */\n    function onload() {\n        document.addEventListener(&#39;click&#39;, onDocumentClick);\n        document.addEventListener(&#39;dblclick&#39;, onDocumenDblClick);\n    }\n\n    /*\n    * 鼠标单击事件响应\n    * event 鼠标事件对象\n    */\n    function onDocumentClick(event) {\n        // 取消上次延时未执行的方法\n        clearTimeout(clickTimeId);\n        //执行延时\n        clickTimeId = setTimeout(function() {\n            //此处为单击事件要执行的代码\n            console.log(&quot;鼠标单击&quot;);\n        }, 250);\n    }\n\n    /*\n    * 鼠标双击事件响应\n    * event 鼠标事件对象\n    */\n    function onDocumenDblClick(event) {\n        // 取消上次延时未执行的方法\n        clearTimeout(clickTimeId);\n        console.log(&quot;鼠标双击&quot;);\n    }</code></pre>\n<p>参考：<a href=\"https://www.hangge.com/blog/cache/detail_1794.html\">https://www.hangge.com/blog/cache/detail_1794.html</a></p>\n<h3 id=\"14-评级组件\">14. 评级组件</h3>\n<pre><code class=\"language-javascript\">    // &quot;★★★★★☆☆☆☆☆&quot;.slice(5 - rate, 10 - rate)\n    // 9.2 3.4 先 / 2 后四舍五入\n    const rate = Math.round(v.rate / 2)\n    v.rataDisplay = &quot;★★★★★☆☆☆☆☆&quot;.slice(5 - rate, 10 - rate)</code></pre>\n<p>参考：<a href=\"https://www.zhihu.com/question/46943112/answer/113583615\">https://www.zhihu.com/question/46943112/answer/113583615</a></p>\n<h3 id=\"15-保存-json\">15. 保存 json</h3>\n<pre><code class=\"language-javascript\">    // 在谷歌 - 开发者工具 - console中输入以下内容 - Store as global variable - 保存\n    JSON.stringify(temp1, 4, &quot;\\t&quot;)</code></pre>\n<h3 id=\"16-flex-像表格一样布局\">16. flex 像表格一样布局</h3>\n<pre><code>    .parent {\n        width: 100%;\n        height: 150px;\n        display: flex;\n        flex-flow: row wrap;\n        align-content: flex-start;\n   }\n\n   .child {\n        box-sizing: border-box;\n        background-color: white;\n        flex: 0 0 33%;\n        height: 50px;\n        border: 1px solid red;\n   }</code></pre>\n<p>参考： <a href=\"https://blog.csdn.net/webEvelement/article/details/82850370\">https://blog.csdn.net/webEvelement/article/details/82850370</a></p>\n<h3 id=\"17-二维数组位置查询\">17. 二维数组位置查询</h3>\n<pre><code class=\"language-javascript\">    // 获取二维数组目标下标\n    getArrIndex(arr, ti, tj){\n        var len = 0;\n        for(let i = 0; i &lt; arr.length; i++){\n            for(let j = 0; j &lt; arr[i].length; j++){\n                if(i == ti &amp;&amp; j == tj) return len;\n                len++;\n            }\n        }\n    },\n    // 从一维数组的随机下标，返回一维数组构成的二维数组下标\n    getIndex(arr, index){\n        var len = 0;\n        for(let i = 0; i &lt; arr.length; i++){\n            for(let j = 0; j &lt; arr[i].length; j++){\n                if(len == index) return [i, j];\n                len++;\n            }\n        }\n    }</code></pre>\n<h3 id=\"18-vue-更改对象属性不刷新页面\">18. Vue 更改对象属性不刷新页面</h3>\n<pre><code>    this.$set(target, projectName, value)</code></pre>\n<p>参考： <a href=\"https://cn.vuejs.org/v2/guide/reactivity.html#%E5%AF%B9%E4%BA%8E%E6%95%B0%E7%BB%84\">https://cn.vuejs.org/v2/guide/reactivity.html#%E5%AF%B9%E4%BA%8E%E6%95%B0%E7%BB%84</a></p>\n<h3 id=\"19-解决-canvas-绘制在移动端模糊的问题\">19. 解决 canvas 绘制在移动端模糊的问题</h3>\n<p>根据移动端的物理像素，放大 canvas 画布，使 1个 canvas 像素和 1个物理像素相等</p>\n<pre><code class=\"language-javascript\">    let canvas = document.getElementById(&#39;canvas&#39;);\n    let ctx = canvas.getContext(&#39;2d&#39;);\n    let dpr = window.devicePixelRatio; // 假设 dpr 为2\n    // 获取 css 的宽高\n    let { width: cssWidth, height: cssHeight } = canvas.getBoundingClientRect();\n    // 根据 dpr，扩大 canvas 画布的像素，使 1个 canvas 像素和 1个物理像素相等\n    canvas.width = dpr * cssWidth;\n    canvas.height = dpr * cssHeight;\n    // 由于画布扩大，canvas 的坐标系也跟着扩大，如果按照原先的坐标系绘图内容会缩小\n    // 所以需要将绘制比例放大\n    ctx.scale(dpr,dpr);</code></pre>\n<p>参考： <a href=\"https://juejin.im/post/5cbdda7bf265da036504fb46\">https://juejin.im/post/5cbdda7bf265da036504fb46</a></p>\n<h3 id=\"20-css-中获取-class-的第-n-个元素\">20. css 中获取 class 的第 n 个元素</h3>\n<pre><code class=\"language-css\">    .poem_replace:nth-of-type(1) {\n        bottom: 4.5rem;\n    }\n    .poem_replace:nth-of-type(2) {\n        bottom: 1.5rem;\n    }</code></pre>\n<p>参考： </p>\n<ul>\n<li><a href=\"https://blog.csdn.net/hh1197787867/article/details/82182069\">https://blog.csdn.net/hh1197787867/article/details/82182069</a></li>\n<li>MDN: <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:nth-of-type\">https://developer.mozilla.org/zh-CN/docs/Web/CSS/:nth-of-type</a></li>\n</ul>\n<h3 id=\"21-css-动画在结束后保持该状态不变\">21. css 动画在结束后保持该状态不变</h3>\n<p>增加 forwards 参数</p>\n<pre><code class=\"language-css\">    .line_1 {\n        animation: line_width_to_enter 1s ease forwards;\n    }</code></pre>\n<p>参考：</p>\n<ul>\n<li><a href=\"https://blog.csdn.net/lp2659359879/article/details/52523888\">https://blog.csdn.net/lp2659359879/article/details/52523888</a></li>\n<li>MDN： <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/animation-fill-mode\">https://developer.mozilla.org/zh-CN/docs/Web/CSS/animation-fill-mode</a></li>\n</ul>\n<h3 id=\"22-获取-class-内的样式元素\">22. 获取 class 内的样式元素</h3>\n<pre><code class=\"language-js\">    // 获取 class 内的样式元素\n    export function getStyle(obj, attr) {\n        var ie = !+&quot;\\v1&quot;;//简单判断ie6~8\n        if (attr == &quot;backgroundPosition&quot;) {//IE6~8不兼容backgroundPosition写法，识别backgroundPositionX/Y\n            if (ie) {\n                return obj.currentStyle.backgroundPositionX + &quot; &quot; + obj.currentStyle.backgroundPositionY;\n            }\n        }\n        if (obj.currentStyle) {\n            return obj.currentStyle[attr];\n        }\n        else {\n            return document.defaultView.getComputedStyle(obj, null)[attr];\n        }\n    }</code></pre>\n<p>参考：<a href=\"https://blog.csdn.net/dragoo1/article/details/48153391\">https://blog.csdn.net/dragoo1/article/details/48153391</a></p>\n<h3 id=\"23-实现-blob-与-base64-互转\">23. 实现 blob 与 base64 互转</h3>\n<pre><code class=\"language-javascript\">    /**\n     * base64  to blob二进制\n     */\n    function dataURItoBlob(dataURI) {\n        var mimeString = dataURI.split(&#39;,&#39;)[0].split(&#39;:&#39;)[1].split(&#39;;&#39;)[0]; // mime类型\n        var byteString = atob(dataURI.split(&#39;,&#39;)[1]); //base64 解码\n        var arrayBuffer = new ArrayBuffer(byteString.length); //创建缓冲数组\n        var intArray = new Uint8Array(arrayBuffer); //创建视图\n\n        for (var i = 0; i &lt; byteString.length; i++) {\n            intArray[i] = byteString.charCodeAt(i);\n        }\n        return new Blob([intArray], {type: mimeString});\n    }\n\n    /**\n     * \n     * blob二进制 to base64\n     **/\n    function blobToDataURI(blob, callback) {\n        var reader = new FileReader();\n        reader.onload = function (e) {\n            callback(e.target.result);\n        }\n        reader.readAsDataURL(blob);\n    }\n\n    // example\n\n    // blob 转 base64\n    blobToDataURI(blob, function (data) {\n        console.log(data);\n    });\n\n    // base64 转blob 伪代码\n    var base64Str = &#39;base64 url&#39;;\n    var blob = dataURItoBlob(base64Str);\n    console.log(blob);</code></pre>\n<p>参考： <a href=\"https://www.cnblogs.com/dcb3688/p/4608062.html\">https://www.cnblogs.com/dcb3688/p/4608062.html</a></p>\n<h3 id=\"24-js-正则表达式提取汉字和去掉汉字\">24. js 正则表达式提取汉字和去掉汉字</h3>\n<pre><code class=\"language-javascript\">    //只提取汉字  \n    function GetChinese(strValue) {  \n        if(strValue!= null &amp;&amp; strValue!= &quot;&quot;){  \n            var reg = /[\\u4e00-\\u9fa5]/g;   \n            return strValue.match(reg).join(&quot;&quot;);  \n        }  \n        else  \n            return &quot;&quot;;  \n    }  \n     //去掉汉字  \n    function RemoveChinese(strValue) {  \n        if(strValue!= null &amp;&amp; strValue != &quot;&quot;){  \n            var reg = /[\\u4e00-\\u9fa5]/g;   \n           return strValue.replace(reg, &quot;&quot;);   \n        }  \n        else  \n            return &quot;&quot;;  \n    }  </code></pre>\n<p>参考： <a href=\"https://blog.csdn.net/yelin042/article/details/76982683\">https://blog.csdn.net/yelin042/article/details/76982683</a></p>\n<h3 id=\"25-js-实现-canvas-保存图片并下载到本地\">25. js 实现 canvas 保存图片并下载到本地</h3>\n<pre><code class=\"language-javascript\">    function exportCanvasAsPNG(id, fileName) {\n\n        var canvasElement = document.getElementById(id);\n\n        var MIME_TYPE = &quot;image/png&quot;;\n\n        var imgURL = canvasElement.toDataURL(MIME_TYPE);\n\n        var dlLink = document.createElement(&#39;a&#39;);\n        dlLink.download = fileName;\n        dlLink.href = imgURL;\n        dlLink.dataset.downloadurl = [MIME_TYPE, dlLink.download, dlLink.href].join(&#39;:&#39;);\n\n        document.body.appendChild(dlLink);\n        dlLink.click();\n        document.body.removeChild(dlLink);\n    }</code></pre>\n<p>参考：</p>\n<ul>\n<li><a href=\"https://www.jianshu.com/p/1707a45198c5\">https://www.jianshu.com/p/1707a45198c5</a></li>\n<li>(三种)： <a href=\"https://blog.csdn.net/wogieni/article/details/97416465\">https://blog.csdn.net/wogieni/article/details/97416465</a></li>\n</ul>\n<h3 id=\"26-js-实现文本的语音朗读\">26. js 实现文本的语音朗读</h3>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;\n        &lt;title&gt;百度语音测试&lt;/title&gt;\n        &lt;script type=&quot;text/javascript&quot;&gt; \n        function doTTS(){\n            var ttsDiv = document.getElementById(&#39;bdtts_div_id&#39;);\n            var ttsAudio = document.getElementById(&#39;tts_autio_id&#39;);\n            var ttsText = document.getElementById(&#39;ttsText&#39;).value;\n\n            // 这样为什么替换不了播放内容\n            /*var ssrcc = &#39;http://tts.baidu.com/text2audio?lan=zh&amp;ie=UTF-8&amp;spd=10&amp;text=&#39;+ttsText;\n            document.getElementById(&#39;tts_source_id&#39;).src=ssrcc;*/\n\n            // 这样就可实现播放内容的替换了\n            ttsDiv.removeChild(ttsAudio);\n            var au1 = &#39;&lt;audio id=&quot;tts_autio_id&quot; autoplay=&quot;autoplay&quot;&gt;&#39;;\n            var sss = &#39;&lt;source id=&quot;tts_source_id&quot; src=&quot;http://tts.baidu.com/text2audio?lan=zh&amp;ie=UTF-8&amp;spd=9&amp;text=&#39;+ttsText+&#39;&quot; type=&quot;audio/mpeg&quot;&gt;&#39;;\n            var eee = &#39;&lt;embed id=&quot;tts_embed_id&quot; height=&quot;0&quot; width=&quot;0&quot; src=&quot;&quot;&gt;&#39;;\n            var au2 = &#39;&lt;/audio&gt;&#39;;\n            ttsDiv.innerHTML = au1 + sss + eee + au2;\n\n            ttsAudio = document.getElementById(&#39;tts_autio_id&#39;);\n\n            ttsAudio.play();\n        }\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div&gt;\n            &lt;input type=&quot;text&quot; id=&quot;ttsText&quot;&gt;\n            &lt;input type=&quot;button&quot; id=&quot;tts_btn&quot; onclick=&quot;doTTS()&quot; value=&quot;播放&quot;&gt;\n        &lt;/div&gt;\n        &lt;div id=&quot;bdtts_div_id&quot;&gt;\n            &lt;audio id=&quot;tts_autio_id&quot; autoplay=&quot;autoplay&quot;&gt;\n                &lt;source id=&quot;tts_source_id&quot; src=&quot;http://tts.baidu.com/text2audio?lan=zh&amp;ie=UTF-8&amp;spd=9&amp;text=播报内容&quot; type=&quot;audio/mpeg&quot;&gt;\n                &lt;embed id=&quot;tts_embed_id&quot; height=&quot;0&quot; width=&quot;0&quot; src=&quot;&quot;&gt;\n            &lt;/audio&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;</code></pre>\n<p>参考: <a href=\"http://www.oicqzone.com/pc/2019061324570.html\">http://www.oicqzone.com/pc/2019061324570.html</a></p>\n<h3 id=\"27-校验是否为中文\">27. 校验是否为中文</h3>\n<pre><code class=\"language-javascript\">    if (/^[\\u4e00-\\u9fa5]+$/.test(text)) {\n        return true;\n    }</code></pre>\n<h3 id=\"28-鼠标--手指位置转换-canvas-坐标\">28. 鼠标 / 手指位置转换 canvas 坐标</h3>\n<pre><code class=\"language-javascript\">    // 伪代码\n    canvas.addEventListener(&quot;touchstart&quot;, function (e) {\n        ifSelected(e);\n    });\n\n    canvas.addEventListener(&quot;click&quot;, function (e) {\n        ifSelected(e);\n    });\n\n    function ifSelected(e) {\n        coord = coordinate(e);\n        // 循环查看 点击位置对应的物体 并对点击物体进行选中\n    }\n\n    // 鼠标 转换 canvas坐标\n    var rect = null;\n    function coordinate(e) {\n        // 画布的大小\n        if (!rect) {\n            // canvas\n            rect = canvas.getBoundingClientRect();\n        }\n        var //鼠标所在位置\n            ex = e.clientX || e.changedTouches[0].clientX,\n            ey = e.clientY || e.changedTouches[0].clientY,\n            //鼠标相对于画布的位置\n            tx = ex - rect.left - document.documentElement.clientLeft,\n            ty = ey - rect.top - document.documentElement.clientTop;\n        //鼠标坐标转换成画布坐标系\n        tx = (tx * canvas.width) / rect.width;\n        ty = (ty * canvas.height) / rect.height;\n        // console.log(&quot;原始坐标&quot; + tx, ty);\n        return { x: tx, y: ty };\n    }\n</code></pre>\n<h2 id=\"node\">Node</h2>\n<h3 id=\"1-express-接收-post-请求参数\">1. express 接收 post 请求参数</h3>\n<pre><code class=\"language-javascript\">    // 伪代码\n\n    // node\n    // 安装依赖：npm install body-parser express --save-dev\n    var express = require(&quot;express&quot;);\n    var bodyParser = require(&#39;body-parser&#39;);//解析, 用req.body获取post参数\n    var app = express();\n        app.use(bodyParser.json());\n        app.use(bodyParser.urlencoded({extended: false}));\n\n    app.post(&quot;/test&quot;,function(req,res){\n        console.log(req.body.test);\n        res.send({hello:&#39;world&#39;});\n    })\n\n    app.listen(port, () =&gt; {\n    console.log(`Server running at http://${hostname}:${port}/`);\n    });\n\n\n    // 前端请求\n    let url = &quot;http://hostname:port&quot;\n    fetch(url + &quot;/test&quot;, {\n        method: &#39;POST&#39;,\n        mode: &#39;cors&#39;,// 避免cors攻击\n        crossDomain: true,\n        headers:{\n            &#39;Content-Type&#39;: &#39;application/json&#39;\n        },\n        body: JSON.stringify({\n            test: &quot;test&quot;\n        })\n    })\n    .then(response =&gt; response.text())\n    .then(res =&gt; {\n        console.log(res)\n    })\n    .catch(err =&gt; console.log(&quot;err : &quot;, err));</code></pre>\n<p>参考： <a href=\"https://www.jianshu.com/p/34ca30e71494\">https://www.jianshu.com/p/34ca30e71494</a></p>\n<h3 id=\"2-跨域问题\">2. 跨域问题</h3>\n<pre><code class=\"language-javascript\">    // 安装依赖：npm install express cors  --save-dev\n    const express = require(&quot;express&quot;);\n    const cors = require(&#39;cors&#39;);\n    const app = express();\n    app.use(cors());    </code></pre>\n<h2 id=\"bug\">bug</h2>\n<h3 id=\"1-uncaught-syntaxerror-invalid-or-unexpected-token-javascript\">1. Uncaught SyntaxError: Invalid or unexpected token (javascript)</h3>\n<p>注意：注意分号要是英文或者是缺少各种符号<code>, { [ ( ......</code>。</p>\n<h3 id=\"2-unable-to-access-httpsgithubcom-openssl-ssl_connect-ssl_error_syscall-in-connection-to-githubcom443-github\">2. unable to access &#39;<a href=\"https://github.com/&#39;\">https://github.com/&#39;</a>: OpenSSL SSL_connect: SSL_ERROR_SYSCALL in connection to github.com:443. (Github)</h3>\n<p>注意：打开git bash(命令行)， 敲命令<code>git config --global http.sslVerify false</code></p>\n<h3 id=\"3-update-the-pi-出错\">3. Update the Pi 出错</h3>\n<blockquote>\n<p>Failed to fetch <a href=\"http://raspbian.raspberrypi.org/raspbian/dists/buster/main/binary-armhf/Packages\">http://raspbian.raspberrypi.org/raspbian/dists/buster/main/binary-armhf/Packages</a></p>\n</blockquote>\n<ul>\n<li>解决办法<pre><code>  sudo rm /var/lib/apt/lists/* -vf\n  sudo apt-get update</code></pre>\n参考： <a href=\"https://raspberrypi.stackexchange.com/questions/81940/raspbian-jessie-apt-get-update-fails-error-hash-sum-mismatch\">https://raspberrypi.stackexchange.com/questions/81940/raspbian-jessie-apt-get-update-fails-error-hash-sum-mismatch</a></li>\n</ul>\n<h3 id=\"4-vue-router-导致报错-vue-warn-failed-to-mount-component-template-or-render-function-not-defined\">4. vue-router 导致报错 [Vue warn]: Failed to mount component: template or render function not defined.</h3>\n<blockquote>\n<p>vue router 里有一个模式叫做<code>命名视图</code>，本来一个页面里面只能有一个路由视图对应一个组件，现在可以多个路由视图对应多个组件。\n解决办法： 将路由中的加载模块修改为 component -&gt; components </p>\n</blockquote>\n<pre><code>    routes.push({\n        path: `/${sub.component}`,\n        name: sub.name,\n        components: componentName[sub.component] // resolve =&gt; require([`../Layout/${sub.component}`], resolve)\n    })</code></pre>\n<p>参考：<a href=\"https://www.cnblogs.com/jianxian/p/11063738.html\">https://www.cnblogs.com/jianxian/p/11063738.html</a></p>\n<h3 id=\"5-uncaught-typeerror-abtargetclassnameindexof-is-not-a-function\">5. Uncaught TypeError: a[b].target.className.indexOf is not a function</h3>\n<p>关闭谷歌浏览器的自动翻译即可，目测我出现这个问题是和语音相关的api冲突了。</p>\n<p>参考：<a href=\"https://blog.csdn.net/m0_37688284/article/details/88947719\">https://blog.csdn.net/m0_37688284/article/details/88947719</a></p>\n<h3 id=\"6-payloadtoolargeerror-request-entity-too-larg\">6. PayloadTooLargeError: request entity too larg</h3>\n<pre><code class=\"language-javascript\">    app.use(bodyParser.json({&#39;limit&#39;: &#39;10mb&#39;,extended: true}));\n    app.use(bodyParser.urlencoded({&#39;limit&#39;: &#39;10mb&#39;,extended: true}));</code></pre>\n<p>参考：<a href=\"https://github.com/apostrophecms/apostrophe/issues/1291\">https://github.com/apostrophecms/apostrophe/issues/1291</a></p>\n<h3 id=\"7-could-not-resolve-host-githubcom\">7. Could not resolve host: github.com</h3>\n<pre><code>    git config --global http.proxy http://127.0.0.1:1080\n    git config --global https.proxy https://127.0.0.1:1080\n    git config --global --unset http.proxy\n    git config --global --unset https.proxy\n\n    npm config delete proxy</code></pre>\n<p>参考：</p>\n<ul>\n<li><a href=\"https://github.com/desktop/desktop/issues/2789\">https://github.com/desktop/desktop/issues/2789</a></li>\n<li><a href=\"https://gist.github.com/laispace/666dd7b27e9116faece6\">https://gist.github.com/laispace/666dd7b27e9116faece6</a></li>\n</ul>\n<h3 id=\"8-ping-baiducom-不通\">8. ping baidu.com 不通</h3>\n<ol>\n<li>调整 DNS 为 <code>114, 114, 114, 114</code> 和 <code>8, 8, 8, 8</code></li>\n<li>查看 DNS 是否修改成功 <code>cat /etc/resolv.conf</code></li>\n<li>(Mac) 再次尝试 <code>nslookup baidu.com</code></li>\n</ol>\n<p>参考：</p>\n<ul>\n<li><a href=\"https://osxdaily.com/2011/06/03/get-dns-server-ip-command-line-mac-os-x/\">https://osxdaily.com/2011/06/03/get-dns-server-ip-command-line-mac-os-x/</a></li>\n<li><a href=\"https://superuser.com/questions/258151/how-do-i-check-what-dns-server-im-using-on-mac-os-x\">https://superuser.com/questions/258151/how-do-i-check-what-dns-server-im-using-on-mac-os-x</a></li>\n</ul>\n<h3 id=\"9-npm-i-卡住\">9. npm i 卡住</h3>\n<ol>\n<li>检查DNS</li>\n<li>配置 npm 源： <code>npm config get registry https://registry.npm.taobao.org/</code></li>\n</ol>\n<p>参考：</p>\n<ul>\n<li><a href=\"https://juejin.im/post/5d8eeb2de51d4578200cc968\">https://juejin.im/post/5d8eeb2de51d4578200cc968</a></li>\n<li><a href=\"https://stackoverflow.com/questions/16873973/npm-install-hangs/39376187\">https://stackoverflow.com/questions/16873973/npm-install-hangs/39376187</a></li>\n</ul>\n<h2 id=\"mac\">Mac</h2>\n<h3 id=\"1-git-安装\">1. git 安装</h3>\n<p>参考：<a href=\"https://www.jianshu.com/p/7edb6b838a2e\">https://www.jianshu.com/p/7edb6b838a2e</a></p>\n<h3 id=\"2-npm-权限问题\">2. npm 权限问题</h3>\n<p>参考：<a href=\"https://blog.csdn.net/sinat_36422236/article/details/89675658\">https://blog.csdn.net/sinat_36422236/article/details/89675658</a></p>\n<h3 id=\"3-查看-ip\">3. 查看 ip</h3>\n<p>参考：<a href=\"https://jingyan.baidu.com/article/b0b63dbf3fefd14a48307013.html\">https://jingyan.baidu.com/article/b0b63dbf3fefd14a48307013.html</a></p>\n<h3 id=\"4-关闭死不掉的进程\">4. 关闭死不掉的进程</h3>\n<ol>\n<li><p>查看端口\n终端输入：lsof -i tcp:port 将port换成被占用的端口(如：8086、9998)\n将会出现占用端口的进程信息。</p>\n</li>\n<li><p>kill进程\n找到进程的PID,使用kill命令：kill -9 PID（进程的PID，如2044），杀死对应的进程</p>\n</li>\n</ol>\n<p>参考: <a href=\"https://blog.csdn.net/nextstudio/article/details/18133963\">https://blog.csdn.net/nextstudio/article/details/18133963</a></p>\n<h3 id=\"5-解压-rar\">5. 解压 rar</h3>\n<ol>\n<li>brew install unrar</li>\n<li>cd到rar文件目录 <code>unrar x filename.rar</code></li>\n</ol>\n<h3 id=\"6-ffmpeg\">6. ffmpeg</h3>\n<ul>\n<li>视频转音频<pre><code class=\"language-javascript\">  // ffmpeg -i 视频.mp4 -b:a 192K -vn 生成文件.mp3\n  ffmpeg -i 0031LM3jlx07yuR6REFa01041200fm8C0E010.mp4 -b:a 192K -vn out.mp3</code></pre>\n</li>\n<li>视频和音频合并<pre><code class=\"language-javascript\">  // ffmpeg -i 视频.mp4 -i 音频.mp3 -c:v copy -c:a 编码格式 生成文件.mp4\n  ffmpeg -i vid.mp4 -i out.mp3 -c:v copy -c:a aac done.mp4</code></pre>\n</li>\n</ul>\n<h3 id=\"7-xcode_xxxxip-不是来自-apple\">7. Xcode_xxx.xip 不是来自 apple</h3>\n<ul>\n<li>终端输入</li>\n<li><code>sudo spctl --master-disable</code></li>\n<li><code>xattr -d com.apple.quarantine /Users/emerge/Downloads/Xcode_10.1.xip </code></li>\n<li>修改日期为几年前，如2018</li>\n</ul>\n<h3 id=\"8-mac-解压-rar-文件出现中文乱码\">8. mac 解压 .rar 文件出现中文乱码</h3>\n<ol>\n<li><code>brew install unar</code></li>\n<li>中文（ GBK 或 GB18030 ）或简体中文（ GB 2312 或 windows，Dos ）<code>unar -encoding GBK 文件名.后缀名</code></li>\n</ol>\n<h2 id=\"github\">Github</h2>\n<h3 id=\"1-关于-gitmodule-子模块的运用\">1. 关于 gitmodule 子模块的运用</h3>\n<p>正常的使用git clone命令，然后再使用 git submodule init 和git submodule update来获取子模块<br>\n参考：<a href=\"https://blog.csdn.net/xuanwolanxue/article/details/80609986\">https://blog.csdn.net/xuanwolanxue/article/details/80609986</a></p>\n<h2 id=\"手机端\">手机端</h2>\n<h3 id=\"1-兼容所有机型\">1. 兼容所有机型</h3>\n<pre><code class=\"language-javascript\">    // 会有白边底部\n    var w = window.innerWidth;\n    window.addEventListener(&quot;resize&quot;, (e) =&gt; {\n        document.body.style.zoom = window.innerWidth / w;\n    })</code></pre>\n<p>参考： <a href=\"https://blog.csdn.net/yakson/article/details/78575135\">https://blog.csdn.net/yakson/article/details/78575135</a></p>\n<pre><code class=\"language-javascript\">    // 使用rem\n    window.addEventListener(&quot;resize&quot;, (e) =&gt; {\n        initWidth();\n        initFontSize();\n    })\n\n    function initWidth() {\n        scaler.style.width = document.documentElement.clientWidth + &#39;px&#39;\n    }\n    function initFontSize() {\n        const cw = document.documentElement.clientWidth\n        // width: 375px -&gt; fontSize:16px\n        if (cw == 375) {\n            document.documentElement.style.fontSize = &#39;16px&#39;\n        } else {\n            document.documentElement.style.fontSize = cw / 375 * 16 + &#39;px&#39;\n        }\n    }\n\n    initWidth();\n    initFontSize(); </code></pre>\n<p>参考： <a href=\"https://blog.csdn.net/fifteen718/article/details/83039121\">https://blog.csdn.net/fifteen718/article/details/83039121</a></p>\n<h3 id=\"2-禁止苹果手机缩放，ios10-后的版本\">2. 禁止苹果手机缩放，ios10 后的版本</h3>\n<pre><code class=\"language-javascript\">    // 阻止双击放大\n    var lastTouchEnd = 0;\n    document.addEventListener(&#39;touchstart&#39;, function(event) {\n        if (event.touches.length &gt; 1) {\n            event.preventDefault();\n        }\n    });\n    document.addEventListener(&#39;touchend&#39;, function(event) {\n        var now = (new Date()).getTime();\n        if (now - lastTouchEnd &lt;= 300) {\n            event.preventDefault();\n        }\n        lastTouchEnd = now;\n    }, false);\n\n    // 阻止双指放大\n    document.addEventListener(&#39;gesturestart&#39;, function(event) {\n        event.preventDefault();\n    }); </code></pre>\n<p>参考： <a href=\"https://blog.csdn.net/Terenceno/article/details/96132342\">https://blog.csdn.net/Terenceno/article/details/96132342</a></p>\n<h3 id=\"3-判断横竖屏\">3. 判断横竖屏</h3>\n<pre><code class=\"language-javascript\">    //判断手机横竖屏状态：\n    window.addEventListener(&quot;onorientationchange&quot; in window ? &quot;orientationchange&quot; : &quot;resize&quot;, function() {\n        if (window.orientation === 180 || window.orientation === 0) { \n            console.log(&quot;竖屏&quot;);\n        } \n        if (window.orientation === 90 || window.orientation === -90 ){ \n            console.log(&quot;横屏&quot;);\n        }  \n    }, false); </code></pre>\n<p>参考：<a href=\"https://www.cnblogs.com/cdj61/p/9342041.html\">https://www.cnblogs.com/cdj61/p/9342041.html</a></p>\n<h3 id=\"4-ios-键盘弹起，body-拉长，关闭键盘页面不回弹\">4. ios 键盘弹起，body 拉长，关闭键盘页面不回弹</h3>\n<pre><code class=\"language-javascript\">    // 获取窗口滚动条高度 \n    export function getScrollTop(){  \n        var scrollTop = 0;  \n        if (document.documentElement &amp;&amp; document.documentElement.scrollTop){  \n            scrollTop = document.documentElement.scrollTop;  \n        } else if(document.body){  \n            scrollTop = document.body.scrollTop;  \n        }  \n        return scrollTop;  \n    };\n    var oldScrollTop = util.getScrollTop() || 0; // 记录当前滚动位置\n    document.body.addEventListener(&#39;focusin&#39;, () =&gt; {  //软键盘弹起事件\n        console.log(&quot;键盘弹起&quot;);\n    });\n    document.body.addEventListener(&#39;focusout&#39;, () =&gt; { //软键盘关闭事件\n        console.log(&quot;键盘收起&quot;);    \n        var ua = window.navigator.userAgent;\n        if (ua.indexOf(&#39;iPhone&#39;) &gt; 0 || ua.indexOf(&#39;iPad&#39;) &gt; 0) { //键盘收起页面空白问题\n            document.body.scrollTop = oldScrollTop; \n            document.documentElement.scrollTop = oldScrollTop; \n        }\n    });</code></pre>\n<p>参考：<a href=\"https://www.cnblogs.com/xiongzaiqiren/p/10505490.html\">https://www.cnblogs.com/xiongzaiqiren/p/10505490.html</a></p>\n<h3 id=\"5-修改苹果默认的工具栏和菜单栏\">5. 修改苹果默认的工具栏和菜单栏</h3>\n<p>需要网页&quot;添加到主屏幕&quot;才能测试。</p>\n<pre><code class=\"language-html\">    &lt;!-- 添加到主屏后的标题(iOS 6+)，是否启用 WebApp 全屏模式，删除苹果默认的工具栏和菜单栏 --&gt;\n    &lt;meta name=”apple-mobile-web-app-capable” content=”yes”/&gt;\n    &lt;!-- \n        设置IOS工具栏颜色 \n        default，设置的背景为白色，带有黑色文本和符号。\n        black，具有黑色背景，黑色文本和符号，使其看起来完全是黑色的，默认。\n        black-translucent，设置具有白色文本和符号，并且将采用与Web应用程序正文相同的背景色。\n    --&gt;\n    &lt;meta name=”apple-mobile-web-app-status-bar-style” content=”black”/&gt;</code></pre>\n<p>参考：<a href=\"https://medium.com/appscope/changing-the-ios-status-bar-of-your-progressive-web-app-9fc8fbe8e6ab\">https://medium.com/appscope/changing-the-ios-status-bar-of-your-progressive-web-app-9fc8fbe8e6ab</a></p>\n<h3 id=\"6-阻止下拉滑动的效果（橡皮筋效果）\">6. 阻止下拉滑动的效果（橡皮筋效果）</h3>\n<pre><code class=\"language-javascript\">    document.body.addEventListener(&#39;touchmove&#39;, function (e) {\n        e.preventDefault(); //阻止默认的处理方式(阻止下拉滑动的效果)\n    }, {passive: false}); //passive 参数不能省略，用来兼容ios和android</code></pre>\n<h3 id=\"7-移动端软键盘弹起\">7. 移动端软键盘弹起</h3>\n<p>140是一个预估值的阀值，用来排除其他的resize操作。仅resize的高度差大于140时，才被识别为软键盘交互，否则不是。如浏览器的工具栏、搜索栏的隐藏，window的窗口页会有一个较小的变化。</p>\n<pre><code class=\"language-javascript\">    var winHeight = window.innerHeight;\n    window.addEventListener(&quot;resize&quot;, ()=&gt;{\n        var thisHeight = window.innerHeight;\n        if ( winHeight - thisHeight &gt; 140 ) {\n            //键盘弹出\n        } else {\n            //键盘收起\n        }\n    })\n</code></pre>\n<p>参考： <a href=\"https://www.cnblogs.com/wangyihong/p/7514304.html\">https://www.cnblogs.com/wangyihong/p/7514304.html</a></p>\n<h2 id=\"常识性知识点\">常识性知识点</h2>\n<h3 id=\"1-影子-dom\">1. 影子 DOM</h3>\n<p>Chrome开发者工具有一个很好的特性就是你可以在Elements选项卡中检查影子DOM子树，就如同你检查普通的DOM树一样，所有想要做的东西都可一通过这个特性完美解决：<br></p>\n<ol>\n<li>进入开发者模式按F1进入设置</li>\n<li>在Preferences选项卡中的Elements中把Show user agent shadow DOM前的复选框勾上（并没有找到原文所说的Genral所以按照网上的其他文章重写了这个步骤）</li>\n<li>重启开发者工具</li>\n</ol>\n<h3 id=\"2-查看-http-请求是否可以跨域\">2. 查看 http 请求是否可以跨域</h3>\n<ul>\n<li><ol>\n<li>找到 <code>浏览器 - 开发者工具 - network - 随便选择某个文件，查看Headers - Response Headers</code></li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>有 <code>Access-Control-Allow-Origin：*</code> 或者 * 为与请求源相同的地址。即服务器支持浏览器跨域访问。</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>若不包含需修改服务器端，允许cors。如不能修改，需要在本地 node 搭中间件 或 使用 nginx</li>\n</ol>\n</li>\n</ul>\n<p>参考： <a href=\"https://blog.csdn.net/gdp12315/article/details/66479524\">https://blog.csdn.net/gdp12315/article/details/66479524</a></p>\n<h3 id=\"3-文字竖排的方式\">3. 文字竖排的方式</h3>\n<pre><code class=\"language-css\">    p {\n        writing-mode: vertical-rl; /* 竖排 从右向左*/\n        writing-mode: vertical-lr; /* 竖排 从左向右*/\n    }</code></pre>\n<p>参考：</p>\n<ul>\n<li><a href=\"https://juejin.im/entry/595f0efc5188250d8b65e1e8\">https://juejin.im/entry/595f0efc5188250d8b65e1e8</a></li>\n<li>MDN: <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode\">https://developer.mozilla.org/en-US/docs/Web/CSS/writing-mode</a></li>\n</ul>\n<h3 id=\"4-data-url-格式\">4. Data URL 格式</h3>\n<blockquote>\n<p>Data URI 的格式: <code>data:[&lt;mime type&gt;][;charset=&lt;charset&gt;][;base64],&lt;encoded data&gt;</code></p>\n</blockquote>\n<ul>\n<li>第一部分是 data: 协议头，它标识这个内容为一个 data URI 资源。</li>\n<li>第二部分是 MIME 类型，表示这串内容的展现方式，比如：text/plain，则以文本类型展示，image/jpeg，以 jpeg 图片形式展示，同样，客户端也会以这个 MIME 类型来解析数据。</li>\n<li>第三部分是编码设置，默认编码是 charset=US-ASCII, 即数据部分的每个字符都会自动编码为 %xx，关于编码的测试，可以在浏览器地址框输入分别输入下面两串内容，查看效果：<pre><code>  // output: ä½ å¥½ -&gt; 使用默认的编码展示，故乱码\n  data:text/html,你好  \n  // output: 你好 -&gt; 使用 UTF-8 展示\n  data:text/html;charset=UTF-8,你好 \n  // output: 浣犲ソ -&gt; 使用 gbk 展示（浏览器默认编码 UTF-8，故乱码）\n  data:text/html;charset=gbk,你好 \n  // output: 你好 -&gt; UTF-8 编码，内容先使用 base64 解码，然后展示\n  data:text/html;charset=UTF-8;base64,5L2g5aW9 </code></pre>\n</li>\n<li>第四部分是 base64 编码设定，这是一个可选项，base64 编码中仅包含 0-9,a-z,A-Z,+,/,=，其中 = 是用来编码补白的。</li>\n<li>最后一部分为这个 Data URI 承载的内容，它可以是纯文本编写的内容，也可以是经过 base64编码 的内容。</li>\n</ul>\n<p>参考： </p>\n<ul>\n<li>原作者： <a href=\"https://www.cnblogs.com/hustskyking/p/data-uri.html\">https://www.cnblogs.com/hustskyking/p/data-uri.html</a> </li>\n<li><a href=\"https://www.cnblogs.com/dcb3688/p/4608062.html\">https://www.cnblogs.com/dcb3688/p/4608062.html</a></li>\n</ul>\n<h3 id=\"5-查看-threejs-版本\">5. 查看 Three.js 版本</h3>\n<p>在浏览器中按F12，打开开发版输入 <code>THREE.REVISION</code></p>\n<h2 id=\"数学类\">数学类</h2>\n<h3 id=\"1-粒子画球\">1. 粒子画球</h3>\n<pre><code class=\"language-javascript\">    var radius = 100;\n    var pointGeo = new THREE.Geometry();\n\n    // 1. 随机生成随机3D向量 -&gt; Normalize -&gt; * 半径\n    var num = 500;\n    for(var i = 0; i &lt; num; i ++){\n        var v = new three.Vector3(Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5) \n        v = v.normalize();\n        v = v.multiplyScalar(radius)\n    }\n\n    // 2.1 (n * n) 的形状 -&gt; 经纬度 -&gt; 球坐标\n    var num = 100;\n    for(var x = -num; x &lt; num; x ++){\n        for(var y = -num; y &lt; num; y ++){\n            var vec = convert2d3d(radius, x, y);\n            var v = new three.Vector3(vec.x, vec.y, vec.z) \n            v.multiplyScalar(radius);\n            pointGeo.vertices.push(v)\n        }\n    }\n    function convert2d3d(r, x, y) {\n        let lat  = y / r * Math.PI - Math.PI / 2;\n        let long = x / r * 2 * Math.PI - Math.PI;\n        return {\n            x: Math.cos(lat) * Math.cos(long),\n            y: Math.sin(lat),\n            z: Math.cos(lat) * Math.sin(long),\n        }\n    }\n\n    // 2.2 通过随机经纬度，生成球坐标\n    for (var i = 0; i &lt; 1000; i++) {\n        var lat = GetRandomNum(1, 10) + Math.random();\n        var long = GetRandomNum(1, 10) + Math.random();\n        var vec = convert2d3d(lat, long);\n        pointGeo.vertices.push( new THREE.Vector3(vec.x, vec.y, vec.z).multiplyScalar(radius) );\n    }\n    function GetRandomNum(Min, Max)\n    {   \n        var Range = Max - Min;   \n        var Rand = Math.random();   \n        return(Min + Math.round(Rand * Range));   \n    } \n    // r*r -&gt; uv -&gt; 3d\n    function convert2d3d(lat, long) {\n        return {\n            x: Math.cos(lat) * Math.cos(long),\n            y: Math.sin(lat),\n            z: Math.cos(lat) * Math.sin(long),\n        }\n    }\n\n    // 3. 参考：https://codepen.io/gadgetgnome/pen/jbPxwQ\n    var radius = 100;\n    var pitchSegments = 50;\n    var elevationSegments = pitchSegments / 2;\n    for (var p = 0; p &lt; pitchSegments; p++) {\n        var pitch = Math.PI * 2 * p / pitchSegments ;\n        for (var e = 0; e &lt; elevationSegments; e++) {\n            var elevation = Math.PI  * ((e / elevationSegments) - 0.5)  // 去掉0.5半球\n            var vec = new THREE.Vector3(\n                ( Math.cos(pitch) * Math.cos(elevation) ) * radius,\n                Math.sin(elevation) * radius,\n                ( Math.sin(pitch) * Math.cos(elevation) ) * radius\n            );\n        }\n    }</code></pre>\n<h3 id=\"2-计算圆柱贴图比例\">2. 计算圆柱贴图比例</h3>\n<pre><code>    w = Math.PI * 2 * raidus\n    h = 已知</code></pre>\n<h3 id=\"3-计算图像缩放比例\">3. 计算图像缩放比例</h3>\n<pre><code class=\"language-javascript\">    var obj = ratioObj(img.width, img.height, side);\n    ctx.drawImage(img, x * side + (side - obj.w) / 2, y * side + (side - obj.h) / 2, obj.w, obj.h );\n\n    // s 边 正方块\n    function ratioObj(w, h, s){\n        var dw, dh; // 最终的图像比例\n        if(w &gt; h){\n            // 图片比例 w / h\n            // 当宽大于高的时候，\n            // 1) dw / dh = w / h\n            // 2) dw = s\n            // 3) s / dh = w / h\n            // 4) 公式反过来，dh / s = h / w\n            // 5) dh = h * s / w\n            dw = s;\n            dh = ( h * s ) / w;\n        } else {\n            // 图片比例 h / w\n            // 当高大于宽的时候，\n            // 1) dh / dw = h / w\n            // 2) dh = s\n            // 3) s / dw = h / w\n            // 4) 公式反过来，dw / s = w / h\n            // 5) dh = w / h * s || w * s / h ;\n            dw = ( w / h ) * s;\n            dh = s;\n        }\n        return {\n            w: dw,\n            h: dh\n        }\n    }\n</code></pre>\n<h3 id=\"4-分页\">4. 分页</h3>\n<pre><code class=\"language-javascript\">    // index 条数 ， page 页玛， limit 限制条数\n    array.filter((item, index) =&gt; index &lt; limit * page &amp;&amp; index &gt;= limit * (page - 1))</code></pre>\n<h3 id=\"5-canvas-arc-绘制圆角矩形\">5. canvas arc 绘制圆角矩形</h3>\n<pre><code class=\"language-javascript\">    function Rect(x, y, w, h) {\n        return {x:x, y:y, width:w, height:h};\n    }\n\n    var Point = function(x, y) {\n        return {x:x, y:y};\n    };\n\n    var rect = Rect(50, 50, 300, 200);\n\n    drawRoundedRect(rect, 25, ctx);\n\n    function drawRoundedRect(rect, r, ctx) {\n        var ptA = Point(rect.x + r, rect.y);\n        var ptB = Point(rect.x + rect.width, rect.y);\n        var ptC = Point(rect.x + rect.width, rect.y + rect.height);\n        var ptD = Point(rect.x, rect.y + rect.height);\n        var ptE = Point(rect.x, rect.y);\n\n        ctx.beginPath();\n\n        ctx.moveTo(ptA.x, ptA.y);\n        ctx.arcTo(ptB.x, ptB.y, ptC.x, ptC.y, r);\n        ctx.arcTo(ptC.x, ptC.y, ptD.x, ptD.y, r);\n        ctx.arcTo(ptD.x, ptD.y, ptE.x, ptE.y, r);\n        ctx.arcTo(ptE.x, ptE.y, ptA.x, ptA.y, r);\n\n        ctx.stroke();\n    }</code></pre>\n<p>参考： <a href=\"https://blog.csdn.net/tanghw/article/details/49793531\">https://blog.csdn.net/tanghw/article/details/49793531</a></p>\n<h3 id=\"6-计算亮点之间的距离\">6. 计算亮点之间的距离</h3>\n<p>公式： <code>Math.sqrt( Math.pow(center.x - x, 2) + Math.pow(center.y - y, 2), 2 )</code>\n参考：<a href=\"https://blog.csdn.net/weixin_40099554/article/details/77873738\">https://blog.csdn.net/weixin_40099554/article/details/77873738</a></p>\n<h2 id=\"小程序\">小程序</h2>\n<h3 id=\"1-换行（标签必须是-text-）\">1. 换行（标签必须是 <code>&lt;text&gt;</code> ?）</h3>\n<ul>\n<li>使用(\\n)<pre><code class=\"language-html\">  &lt;text&gt;LV.1\\n点数：00&lt;/text&gt;</code></pre>\n</li>\n<li>使用<code>&lt;view&gt;</code>标签包一下</li>\n</ul>\n<h3 id=\"2-小程序更新后，不能自动弹出授权，需要用户手动点击官方推荐-button-\">2. 小程序更新后，不能自动弹出授权，需要用户手动点击(官方推荐 button )</h3>\n<ul>\n<li>wxml<pre><code class=\"language-html\">  &lt;!-- 如果只是展示用户头像昵称，可以使用 &lt;open-data /&gt; 组件 --&gt;\n  &lt;open-data class=&quot;user-avatar&quot; type=&quot;userAvatarUrl&quot;&gt;&lt;/open-data&gt;\n  &lt;open-data class=&quot;user-nick-name&quot; type=&quot;userNickName&quot;&gt;&lt;/open-data&gt;\n  &lt;!-- 需要使用 button 来授权登录 --&gt;\n  &lt;button class=&quot;userinfo-btn&quot; wx:if=&quot;{{canIUse}}&quot; type=&quot;primary&quot; open-type=&quot;getUserInfo&quot; bindgetuserinfo=&quot;bindGetUserInfo&quot;&gt;授权登录&lt;/button&gt;\n  &lt;view wx:else&gt;请升级微信版本&lt;/view&gt;</code></pre>\n</li>\n<li>js<pre><code class=\"language-javascript\">Page({\ndata: {\n  canIUse: wx.canIUse(&#39;button.open-type.getUserInfo&#39;)\n},\nonLoad: function() {\n  // 查看是否授权\n  wx.getSetting({\n    success (res){\n      if (res.authSetting[&#39;scope.userInfo&#39;]) {\n        // 已经授权，可以直接调用 getUserInfo 获取头像昵称\n        wx.getUserInfo({\n          success: function(res) {\n            console.log(res.userInfo)\n          }\n        })\n      }\n    }\n  })\n},\nbindGetUserInfo (e) {\n  console.log(e.detail.userInfo)\n  // 跳转到tab主页面\n  wx.switchTab({\n    url: &quot;../index/index&quot;\n  })\n},\n/**\n  * 生命周期函数--监听页面显示\n  */\nonShow: function () {\n  // 授权页面隐藏home键\n  if (wx.canIUse(&#39;hideHomeButton&#39;)) {\n    wx.hideHomeButton({\n      success: res =&gt; {\n        console.log(res);\n      }\n    })\n  }\n},\n})</code></pre>\n</li>\n<li>wxss<pre><code class=\"language-css\">  .user-avatar {\n      position: absolute;\n      left: 50%;\n      top: 10%;\n      transform: translateX(-50%);\n  }\n  .user-nick-name {\n      position: absolute;\n      left: 50%;\n      top: 30%;\n      transform: translateX(-50%);\n  }\n  .userinfo-btn {\n      position: absolute;\n      left: 50%;\n      top: 40%;\n      transform: translateX(-50%);\n  }</code></pre>\n</li>\n<li>设置自定义编译，修改启动页面为授权页面，并隐藏home键。</li>\n</ul>\n<h3 id=\"3-bindtap-点击事件传参\">3. bindtap 点击事件传参</h3>\n<ul>\n<li>使用 data-xx / id 进行传递参数<pre><code class=\"language-html\">  &lt;view bindtap=&quot;getSwiperNum&quot; data-item=&quot;{{item}}&quot; class=&quot;swiper-item {{item}}&quot;&gt;&lt;/view&gt;</code></pre>\n</li>\n</ul>\n<pre><code class=\"language-javascript\">    getSwiperNum: function(event){\n        console.log(event.target);\n        // dataset: {item: &quot;demo-text-1&quot;}\n        // id: &quot;&quot;\n        // offsetLeft: 113\n        // offsetTop: 0\n    }</code></pre>\n<p>参考：<a href=\"https://blog.csdn.net/u013778905/article/details/59129272\">https://blog.csdn.net/u013778905/article/details/59129272</a></p>\n<h3 id=\"4-微信开发文档--快速查找\">4. 微信开发文档 / 快速查找</h3>\n<ul>\n<li>分享 / 转发： <a href=\"https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onShareAppMessage-Object-object\">https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onShareAppMessage-Object-object</a></li>\n<li>路由： <a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateTo.html\">https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateTo.html</a></li>\n<li>web-view: <a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/web-view.html\">https://developers.weixin.qq.com/miniprogram/dev/component/web-view.html</a></li>\n</ul>\n<h3 id=\"5-组件化\">5. 组件化</h3>\n<h4 id=\"component（自定义组件）\">component（自定义组件）</h4>\n<ul>\n<li><p>介绍</p>\n<blockquote>\n<ul>\n<li>properties：是组件对外开放的属性，当在使用者 xml 文件中使用该组件时，可以为这些属性传值达到改变组件的目的</li>\n<li>data：内部数据，和 page 的 data 一样，和 properties 不同的是它是对内的</li>\n<li>mthods：组件的自定义方法都定义在其内部，亲测定义在外部无法识别</li>\n<li>externalClasses：组件外部样式，组件内部的样式是不受 app 和 使用者的 css 影响的，如果有组件内部有一些样式希望在使用者使用时才决定，那么久可以通过 externalClasses 去实现</li>\n<li>behaviors：用于组件间的引用（详情：文档-组件间的关系)</li>\n<li>生命周期 ：created()、attached()、ready()、moved()、dettach()</li>\n</ul>\n</blockquote>\n</li>\n<li><p>新建目录，在目录下新建component</p>\n<pre><code class=\"language-javascript\">  Component({\n      //选项\n      options: {\n          multipleSlots: true // 启用多slot（插槽）支持\n      },\n      properties: {\n          //外部属性\n          text: {\n              type: String, //类型\n              value: &#39;default value&#39;, //默认值\n              observer: &#39;方法名&#39; //当数据发生变化时调用\n          }\n      },\n      //外部样式\n      externalClasses: [&#39;text-class&#39;],\n      data: {\n          // 内部数据\n          someData: {}\n      },\n      //生命周期\n      attached: function(){},\n      moved: function(){},\n      detached: function(){},\n      methods: {\n          // 自定义方法\n          customMethod: function(){}\n      }\n  })</code></pre>\n</li>\n<li><p>使用者在 json 内添加调用关系</p>\n<pre><code class=\"language-js\">  {\n      &quot;usingComponents&quot;: {\n          // 组件名 : 路径\n          &quot;component-name&quot;: &quot;component-path&quot;,\n      }\n  }</code></pre>\n</li>\n<li><p>使用者在 wxml 内添加组件，属性名 = 属性值</p>\n<pre><code class=\"language-html\">  &lt;component-name property=&quot;&quot; /&gt;</code></pre>\n</li>\n<li><p>template\n参考： <a href=\"https://juejin.im/post/5b64744df265da0f6d72f4d7\">https://juejin.im/post/5b64744df265da0f6d72f4d7</a></p>\n</li>\n</ul>\n<h3 id=\"6-生命周期\">6. 生命周期</h3>\n<pre><code class=\"language-javascript\">    //index.js\n    Page({\n        data: {\n            text: &quot;This is page data.&quot;\n        },\n        onLoad: function(options) {\n            // 页面创建时执行\n        },\n        onShow: function() {\n            // 页面出现在前台时执行\n        },\n        onReady: function() {\n            // 页面首次渲染完毕时执行\n        },\n        onHide: function() {\n            // 页面从前台变为后台时执行\n        },\n        onUnload: function() {\n            // 页面销毁时执行 - 点击左上角返回上层页面的时候也会执行\n        },\n        onPullDownRefresh: function() {\n            // 触发下拉刷新时执行\n        },\n        onReachBottom: function() {\n            // 页面触底时执行\n        },\n        onShareAppMessage: function () {\n            // 页面被用户分享时执行\n        },\n        onPageScroll: function() {\n            // 页面滚动时执行\n        },\n        onResize: function() {\n            // 页面尺寸变化时执行\n        },\n        onTabItemTap(item) {\n            // tab 点击时执行\n            console.log(item.index)\n            console.log(item.pagePath)\n            console.log(item.text)\n        },\n        // 事件响应函数\n        viewTap: function() {\n            this.setData({\n            text: &#39;Set some data for updating view.&#39;\n            }, function() {\n            // this is setData callback\n            })\n        },\n        // 自由数据\n        customData: {\n            hi: &#39;MINA&#39;\n        }\n    })</code></pre>\n<p>参考： <a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/page.html\">https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/page.html</a></p>\n<h3 id=\"7-自定义导航栏\">7. 自定义导航栏</h3>\n<ol>\n<li><p>首先取得控制权，在 app.json 内配置后，只会保留右上角的胶囊</p>\n<pre><code class=\"language-json\"> &quot;window&quot;: {\n     &quot;navigationStyle&quot;: &quot;custom&quot;\n }</code></pre>\n</li>\n<li><p>在 app.js 内获取设备信息</p>\n<pre><code class=\"language-javascript\"> App({\n     onLaunch: function () {\n         this.globalData = {\n             systeminfo: {}, // 系统信息\n             headerBtnPosi: {} // 胶囊按钮位置信息\n         }\n         wx.getSystemInfo({ // 获取设备信息\n             success: (res) =&gt; {\n                 this.globalData.systeminfo = res\n             },\n         })\n         // 获得胶囊按钮位置信息\n         // wx.getMenuButtonBoundingClientRect() 像对象一样使用\n         this.globalData.headerBtnPosi = wx.getMenuButtonBoundingClientRect()\n     }\n })</code></pre>\n</li>\n</ol>\n<h3 id=\"8-text-显示空格\">8. text 显示空格</h3>\n<pre><code class=\"language-html\">    &lt;!-- 权限 decode=&quot;{{true}}&quot;，空格 &amp;nbsp; --&gt;\n    &lt;text decode=&quot;{{true}}&quot;&gt;&amp;nbsp;&amp;nbsp;&lt;/text&gt;</code></pre>\n<p>参考：<a href=\"https://blog.csdn.net/llixiangjian/article/details/78457536\">https://blog.csdn.net/llixiangjian/article/details/78457536</a></p>\n<h3 id=\"9-web-view-的使用\">9. web-view 的使用</h3>\n<ul>\n<li><ol>\n<li>个人账号不能使用 web-view，可以通过以下设置，本地测试。<blockquote>\n<p>详情(开发者工具右上角) -&gt; 本地设置 -&gt; 不效验合法域名、web-view（业务域名）、TLS版本以及HTTPS证书</p>\n</blockquote>\n</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>参考官方文档<pre><code class=\"language-html\">&lt;web-view src=&quot;http://emerge.cc/inspire/?topic=stepper&amp;nsukey=dBSEbpjeCFJ%2FLCqMNpU06ugvCEMSSbi37wubNK3ubE3tJ48V2OEEk%2FZWgst3dnIK2gRd94IfNUfQqCnbdfc5Tis9LO19C01bsUsFyRE71KnagCmAAYKu9yvkZt%2ByyIjOS8%2F9%2B%2BCovplBqyZuk%2FJztx%2BFErEDI%2BITwJPTDtmafAF4ngqBZZM6%2FtOLrd25mQuFiil8IhfX2VIoxjATWix6MQ%3D%3D&quot;&gt;&lt;/web-view&gt;</code></pre>\n</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"10-父调用子组件，参数变化不刷新的问题\">10. 父调用子组件，参数变化不刷新的问题</h3>\n<ul>\n<li>在 <code>onLoad / onShow</code> 中调用 <code>setData</code><pre><code class=\"language-js\">/**\n * 生命周期函数--监听页面显示\n */\nonShow: function () {\n  this.setData({\n    money: app.globalData.money\n  })\n}</code></pre>\n</li>\n</ul>\n<h2 id=\"linux\">linux</h2>\n<h3 id=\"1-raspberry-pi-树莓派-清华源\">1. raspberry pi (树莓派) 清华源</h3>\n<pre><code>    sudo sed -i &#39;s#://raspbian.raspberrypi.org#s://mirrors.ustc.edu.cn/raspbian#g&#39; /etc/apt/sources.list \n    sudo sed -i &#39;s#://archive.raspberrypi.org/debian#s://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian#g&#39; /etc/apt/sources.list.d/raspi.list</code></pre>\n<p>参考：<a href=\"https://www.jianshu.com/p/67b9e6ebf8a0\">https://www.jianshu.com/p/67b9e6ebf8a0</a></p>\n<h3 id=\"2-nodejs-最新版本下载-debian\">2. nodejs 最新版本下载 (Debian)</h3>\n<ul>\n<li>Node.js v13.x:<pre><code>  # Using Debian, as root\n  curl -sL https://deb.nodesource.com/setup_13.x | bash -\n  apt-get install -y nodejs</code></pre>\n参考：<a href=\"https://github.com/nodesource/distributions/blob/master/README.md\">https://github.com/nodesource/distributions/blob/master/README.md</a></li>\n</ul>\n<h2 id=\"wscript\">WScript</h2>\n<h3 id=\"1-vb脚本\">1. VB脚本</h3>\n<ul>\n<li><ol>\n<li>WScript.Sleep(mm) 将当前脚本的执行暂停指定的毫秒数(单位毫秒)。</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"electron\">Electron</h2>\n<h3 id=\"1-窗口全屏退出快捷键\">1. 窗口全屏退出快捷键</h3>\n<pre><code>    windows： Alt+F4\n    macOS：command+Q</code></pre>\n",
		"filename": "trivia.md",
		"uuid": "d6789870-4fe6-4229-a745-324607d0816a"
	}
]